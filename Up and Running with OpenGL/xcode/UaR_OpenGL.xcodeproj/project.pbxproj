// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXAggregateTarget section */
		076FA14610C24E7DB37F8A42 /* install */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 780A87A643824133962A1F98 /* Build configuration list for PBXAggregateTarget "install" */;
			buildPhases = (
				1467EB6907F64EFA8E0DF946 /* CMake PostBuild Rules */,
			);
			dependencies = (
				CEA3A0C82EEB446B8A95CD42 /* PBXTargetDependency */,
			);
			name = install;
			productName = install;
		};
		938656ED1568458DB0267E19 /* uninstall */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 22AC119532C7470C8E3696FF /* Build configuration list for PBXAggregateTarget "uninstall" */;
			buildPhases = (
				6DAACDCB32B6470F94BE15CE /* CMake Rules */,
			);
			dependencies = (
			);
			name = uninstall;
			productName = uninstall;
		};
		AC46AF086FB94535AD86558E /* ALL_BUILD */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = EB3EF5D58A0948C2982DAB26 /* Build configuration list for PBXAggregateTarget "ALL_BUILD" */;
			buildPhases = (
				0CF96B7AC95948FFB334D3B1 /* CMake Rules */,
			);
			dependencies = (
				933DB9B7ACF945ECB4EDD3A0 /* PBXTargetDependency */,
				BD9ECCC414BD4780ADC36DA4 /* PBXTargetDependency */,
				2E35F0E97B544CC8BCDEEB57 /* PBXTargetDependency */,
				CE2440DFA7C74CBDB948FCB7 /* PBXTargetDependency */,
				AE865F6C5A8440C7B285FDB8 /* PBXTargetDependency */,
				D7E5FAD26E1D4581A97FCE0F /* PBXTargetDependency */,
				758BE2645C2D40EEB46CE6B0 /* PBXTargetDependency */,
				D64B75C5086A42BBA096685F /* PBXTargetDependency */,
				FAC1ACCA820A40D6ACDBCBCB /* PBXTargetDependency */,
				7EE725D93F0245CD9859500F /* PBXTargetDependency */,
				1CC01BF92B2E4E05B259A6E4 /* PBXTargetDependency */,
				82C04C79B2654107A7AE46F7 /* PBXTargetDependency */,
				C3098BC51D3D4A598038DB12 /* PBXTargetDependency */,
				C14F3ACF101D4E1A82AE15C2 /* PBXTargetDependency */,
				DC9298F4F4EF41FD83B2548B /* PBXTargetDependency */,
				4910FAE165254558BFAF3280 /* PBXTargetDependency */,
				ABABA8DBBF7541F085227AC0 /* PBXTargetDependency */,
				F3DD3CB084D94E2CB8717109 /* PBXTargetDependency */,
				A05BE1A982EB4235959E6C68 /* PBXTargetDependency */,
				7E828DCB0D3648BEAD49DFB3 /* PBXTargetDependency */,
				9701FB00C398462F87A732D8 /* PBXTargetDependency */,
				13E0094BB8B54E9090049E4E /* PBXTargetDependency */,
				60FD5D7236B4432C98683CB5 /* PBXTargetDependency */,
				BF0972E0027C4FD69CF5952B /* PBXTargetDependency */,
				1B77F1356D9C476682AF40D4 /* PBXTargetDependency */,
				0AFA59E42CAC4B06BB17D8D4 /* PBXTargetDependency */,
				B1D9A90CBFAB44758C7628EA /* PBXTargetDependency */,
				AAD5DB7DA69047919B539186 /* PBXTargetDependency */,
				22E5F79DCDFB4A75BEC31E65 /* PBXTargetDependency */,
				5459CD30411C4EF38159DD59 /* PBXTargetDependency */,
				89149658637C47A4B7B6119A /* PBXTargetDependency */,
				CC0016A630804E4EAECB6477 /* PBXTargetDependency */,
				3B895BA8E753463D91C7676C /* PBXTargetDependency */,
				872A87FF07EA49528F182314 /* PBXTargetDependency */,
				5B446BAD91AD44BE9BA032C0 /* PBXTargetDependency */,
				E05C5CFA84654478B1784C9D /* PBXTargetDependency */,
				8906B5DE913C453F8C4A2717 /* PBXTargetDependency */,
				1E1C5F3B9AE74BA78281B9C5 /* PBXTargetDependency */,
			);
			name = ALL_BUILD;
			productName = ALL_BUILD;
		};
		D1BDF48FD8FD4353A35A71E4 /* ZERO_CHECK */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = A8E544DAA170427DA0934AD3 /* Build configuration list for PBXAggregateTarget "ZERO_CHECK" */;
			buildPhases = (
				6346A6E5F9EB4EBAA65B5205 /* CMake Rules */,
			);
			dependencies = (
			);
			name = ZERO_CHECK;
			productName = ZERO_CHECK;
		};
/* End PBXAggregateTarget section */

/* Begin PBXBuildFile section */
		001AAC15070E4B9D93C74309 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/getopt.h */ = {isa = PBXBuildFile; fileRef = EEB4A41E42EC45B1962F5B50 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/getopt.h */; settings = {COMPILER_FLAGS = ""; }; };
		0477C2741CE247E3B3E04B3F /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/iconify.c */ = {isa = PBXBuildFile; fileRef = 9911E58456754A529DB1D4CF /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/iconify.c */; settings = {COMPILER_FLAGS = ""; }; };
		051E9EF591064BC2B42C64F7 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include/GLFW/glfw3native.h */ = {isa = PBXBuildFile; fileRef = 91C879491E3C4AD9BC7B2846 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include/GLFW/glfw3native.h */; settings = {COMPILER_FLAGS = ""; }; };
		062514B4DE6F4DAFA799CF04 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/accuracy.c */ = {isa = PBXBuildFile; fileRef = 058BDC19F2644CAD8CD8CD5A /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/accuracy.c */; settings = {COMPILER_FLAGS = ""; }; };
		06BDD67BA119424C935BAD59 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests/CMakeFiles/sharing.dir/Info.plist */ = {isa = PBXBuildFile; fileRef = ABB93B996DED46AFB462DD49 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests/CMakeFiles/sharing.dir/Info.plist */; settings = {COMPILER_FLAGS = ""; }; };
		07310E9CC492427899322874 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests/CMakeFiles/tearing.dir/Info.plist */ = {isa = PBXBuildFile; fileRef = B1C83AE56CA24D4893223A72 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests/CMakeFiles/tearing.dir/Info.plist */; settings = {COMPILER_FLAGS = ""; }; };
		08F3DDF283824EC0ACE5B7A9 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 567A62C11D194AD1A1A704F8 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */; settings = {COMPILER_FLAGS = ""; }; };
		0AB86F8CD5F8453285DA5946 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/GLFWApp.cpp */ = {isa = PBXBuildFile; fileRef = 56F0320FA72443FE89BC13A7 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/GLFWApp.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		0DA42891BBA74FF0B697E7FB /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 2DC252E4832D4ED189383FAC /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */; settings = {COMPILER_FLAGS = ""; }; };
		1176287D1EA0480AACCF70B8 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/DynamicMesh.cpp */ = {isa = PBXBuildFile; fileRef = 30F67E5E7CD5499EAA75E3EF /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/DynamicMesh.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		11E7FD79AF9442A0BA369E61 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 53A644CB3919417CBA38CABC /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/CMakeLists.txt */; settings = {COMPILER_FLAGS = ""; }; };
		1432D85E6B20494CA87FF0C6 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/cocoa_gamma.c */ = {isa = PBXBuildFile; fileRef = 18DD15F90D61469D96DD7EED /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/cocoa_gamma.c */; settings = {COMPILER_FLAGS = ""; }; };
		1CEC1B11202548B3BE37D597 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests/CMakeFiles/windows.dir/Info.plist */ = {isa = PBXBuildFile; fileRef = 7FD80AAE3F254EEA8FC4DAC0 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests/CMakeFiles/windows.dir/Info.plist */; settings = {COMPILER_FLAGS = ""; }; };
		1D417264D1CD4818A46D9A91 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 36AA372F78264FA694889574 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/CMakeLists.txt */; settings = {COMPILER_FLAGS = ""; }; };
		1DA8FB83BF6B40299AE34C01 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 42DD914DA8AE4D26B22675A9 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */; settings = {COMPILER_FLAGS = ""; }; };
		1DE822012F3C475FA347FF20 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/modes.c */ = {isa = PBXBuildFile; fileRef = D3C4C54F2629417FBA0A5F4B /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/modes.c */; settings = {COMPILER_FLAGS = ""; }; };
		1F501CA20C8B481D8D5B3EE4 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/joystick.c */ = {isa = PBXBuildFile; fileRef = 9A6640E1CEA64CEDBFF3C945 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/joystick.c */; settings = {COMPILER_FLAGS = ""; }; };
		247A0889DF884338AB384278 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/tinycthread.h */ = {isa = PBXBuildFile; fileRef = 75E918B2855045908CC16AD7 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/tinycthread.h */; settings = {COMPILER_FLAGS = ""; }; };
		27A4F33D35D74B89A6D7F9E4 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/init.c */ = {isa = PBXBuildFile; fileRef = 106AE81F56E44B9BA83136BD /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/init.c */; settings = {COMPILER_FLAGS = ""; }; };
		2F4DABCD6FC846A7A9BFC7AA /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/peter.c */ = {isa = PBXBuildFile; fileRef = 0A12F201A4994309B56D79A3 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/peter.c */; settings = {COMPILER_FLAGS = ""; }; };
		310B95A7EAE043AD896F9F6C /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/threads.c */ = {isa = PBXBuildFile; fileRef = 87E40BF334CB4C92A836C8A5 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/threads.c */; settings = {COMPILER_FLAGS = ""; }; };
		31395034C9D9492A90DCC565 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests/CMakeFiles/title.dir/Info.plist */ = {isa = PBXBuildFile; fileRef = F0758368BE494984AA54A130 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests/CMakeFiles/title.dir/Info.plist */; settings = {COMPILER_FLAGS = ""; }; };
		333EFA75FE694C1987BDD1EE /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 7BED6C17256A4459B84C826F /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */; settings = {COMPILER_FLAGS = ""; }; };
		359B9F2C66F141C59F2C6EA6 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/getopt.h */ = {isa = PBXBuildFile; fileRef = DF4B8376236540F9A61340C0 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/getopt.h */; settings = {COMPILER_FLAGS = ""; }; };
		384379DDF42C41248D705615 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/windows.c */ = {isa = PBXBuildFile; fileRef = 77696700027D4589B70529E4 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/windows.c */; settings = {COMPILER_FLAGS = ""; }; };
		39A41E7CC73348188CA9C72F /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/TriangleOrtho.cpp */ = {isa = PBXBuildFile; fileRef = FD3BE19C3AF24FC29BE6210C /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/TriangleOrtho.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		39FF5524826149FCB683BB2E /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = CCA27134AF8D46C4A8C21EF4 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */; settings = {COMPILER_FLAGS = ""; }; };
		3C67D866987948C69366B6DE /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/clipboard.c */ = {isa = PBXBuildFile; fileRef = 4BEC18CE1C0B483F90BED1B7 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/clipboard.c */; settings = {COMPILER_FLAGS = ""; }; };
		3E571B6C9CD1479B8713EB77 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = E5816FAFB9F24B6C8838A4F0 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/CMakeLists.txt */; settings = {COMPILER_FLAGS = ""; }; };
		3FA433825F9046BD81BF5EDA /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 0B2318A2E8544DFE9F5348CC /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/CMakeLists.txt */; settings = {COMPILER_FLAGS = ""; }; };
		400410FC6B554832B1122D8C /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = E95AD1987D1D49029308B11B /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */; settings = {COMPILER_FLAGS = ""; }; };
		401B44F146254FCB8CA2A668 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 6BF72962D5534DA6A58DBFE6 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */; settings = {COMPILER_FLAGS = ""; }; };
		43195B36631F4B458A44CE0A /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/cocoa_platform.h */ = {isa = PBXBuildFile; fileRef = EA63C0A3E35048A0A1F2AF3E /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/cocoa_platform.h */; settings = {COMPILER_FLAGS = ""; }; };
		433512EE62AD41CAAD0B047C /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/TriangleColorBuffer.cpp */ = {isa = PBXBuildFile; fileRef = 62C6B9CF4FB6411097C45AE7 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/TriangleColorBuffer.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		44D5395A156745A49806656C /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/LightingAndTexture.cpp */ = {isa = PBXBuildFile; fileRef = 279121123D4147F7A163A85C /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/LightingAndTexture.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		4876EA29499747A1A0E19D3F /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/Keyboard.cpp */ = {isa = PBXBuildFile; fileRef = 1BF412177B0E492CBC6B271F /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/Keyboard.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		48DAC5C5200F4FFEAD102464 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/input.c */ = {isa = PBXBuildFile; fileRef = 55E237406E2B410F8BEC94B9 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/input.c */; settings = {COMPILER_FLAGS = ""; }; };
		48E406427F8342A5B578A205 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 935DACEAEFA547908DF401C0 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/CMakeLists.txt */; settings = {COMPILER_FLAGS = ""; }; };
		49ACCF6B9C844E169B7ED89B /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 721103F44ADD4E65950521C2 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/CMakeLists.txt */; settings = {COMPILER_FLAGS = ""; }; };
		49F0BBA6CB204CCCBC2360BA /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 213FE68F0F3D43D7A885F087 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/CMakeLists.txt */; settings = {COMPILER_FLAGS = ""; }; };
		4D4C1070AD5947BD9F1AA383 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/Mouse.cpp */ = {isa = PBXBuildFile; fileRef = 7DCC9880582A4B13A6E5083B /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/Mouse.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		52A906DB27934FFB8D089793 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/getopt.h */ = {isa = PBXBuildFile; fileRef = EEB422FF0CDA46E0AB83E10E /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/getopt.h */; settings = {COMPILER_FLAGS = ""; }; };
		58A3FE4711C44BF8A04393D7 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include/GLFW/glfw3.h */ = {isa = PBXBuildFile; fileRef = BFFB86000CD4440DBB5D10BA /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include/GLFW/glfw3.h */; settings = {COMPILER_FLAGS = ""; }; };
		5993104F898643BB958E4B62 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/GLFWwindow.cpp */ = {isa = PBXBuildFile; fileRef = 1291F7925FDB4085B2BB7ECC /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/GLFWwindow.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		5C22DA2FE2AA4F1ABDD6728B /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 46F020B1F911499D85891539 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/CMakeLists.txt */; settings = {COMPILER_FLAGS = ""; }; };
		5D261ACDC1324974AE95B386 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/cocoa_time.c */ = {isa = PBXBuildFile; fileRef = E03482DD07644114BE7DA5FA /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/cocoa_time.c */; settings = {COMPILER_FLAGS = ""; }; };
		61C8697175CC41D7875D127D /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/internal.h */ = {isa = PBXBuildFile; fileRef = 8CFB98E7DD4947FD90208EFF /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/internal.h */; settings = {COMPILER_FLAGS = ""; }; };
		620B9B25C1D64836B52888B6 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 6ACCE65FC37542F381AAFA76 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/CMakeLists.txt */; settings = {COMPILER_FLAGS = ""; }; };
		661EFC999E5349D8A182578D /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/cocoa_clipboard.m */ = {isa = PBXBuildFile; fileRef = C73211FDC4DC42CF93EC2E1F /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/cocoa_clipboard.m */; settings = {COMPILER_FLAGS = ""; }; };
		6CC1346159D34057A80CBF3D /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = BDBA350AFC704901979247EE /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */; settings = {COMPILER_FLAGS = ""; }; };
		6DC8B9D17A2B4292B449E7CE /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/Lighting.cpp */ = {isa = PBXBuildFile; fileRef = 0490D471ABAE431C92F46EBB /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/Lighting.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		7238EC33441D4DE5A8B26F2E /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = BCFD4755F2FB45438CE05CC0 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */; settings = {COMPILER_FLAGS = ""; }; };
		730BBDD9D6B241219862FF38 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 03264C64EA274CAB8657A7F2 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/CMakeLists.txt */; settings = {COMPILER_FLAGS = ""; }; };
		7568611437104DEDB8CE4645 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/glfwinfo.c */ = {isa = PBXBuildFile; fileRef = 1D7C9CDA339540D09EFEF695 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/glfwinfo.c */; settings = {COMPILER_FLAGS = ""; }; };
		75B1B416E0B44FA096E15AF0 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/reopen.c */ = {isa = PBXBuildFile; fileRef = 0F4CDEEB03DB4F79A4950C37 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/reopen.c */; settings = {COMPILER_FLAGS = ""; }; };
		78DA0776E66140029FF4082D /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = AD816F7F6CEC43289C6D635D /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */; settings = {COMPILER_FLAGS = ""; }; };
		7949905DEC83447CBC4006ED /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/Immediate.cpp */ = {isa = PBXBuildFile; fileRef = B06425755FFE4ECAA5B5C4E3 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/Immediate.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		86525983459C4D9BB0CD830E /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/fsaa.c */ = {isa = PBXBuildFile; fileRef = 04846186790A4AA093B8E4BE /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/fsaa.c */; settings = {COMPILER_FLAGS = ""; }; };
		867B719CEDC842AE99BAA54B /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/window.c */ = {isa = PBXBuildFile; fileRef = 84A205F9FFCE49AE914B531F /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/window.c */; settings = {COMPILER_FLAGS = ""; }; };
		869E4E7A1D02493EBC63E153 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = FB78ED87CB0647F584D5A6F5 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */; settings = {COMPILER_FLAGS = ""; }; };
		8723FAA9318A4FD0865E523B /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/TextureLoader.cpp */ = {isa = PBXBuildFile; fileRef = 0033636051544F3C95055E55 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/TextureLoader.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		895C682B0EC54F88B10561E0 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 22D140A18418456A99FEFEEF /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/CMakeLists.txt */; settings = {COMPILER_FLAGS = ""; }; };
		8B28F15E66A84D6FA4915E6D /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/cocoa_joystick.m */ = {isa = PBXBuildFile; fileRef = 8F84A165C6F74294AA6A0AA0 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/cocoa_joystick.m */; settings = {COMPILER_FLAGS = ""; }; };
		8E0227D5AFB64E27A384D442 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/gamma.c */ = {isa = PBXBuildFile; fileRef = F056F7FCCA5E478692C2A59D /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/gamma.c */; settings = {COMPILER_FLAGS = ""; }; };
		8EEFD1EB46564FB8870714DA /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/gamma.c */ = {isa = PBXBuildFile; fileRef = A41A712AAE474849BC820474 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/gamma.c */; settings = {COMPILER_FLAGS = ""; }; };
		90AABB032B8749B1A9C103CD /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/getopt.c */ = {isa = PBXBuildFile; fileRef = FADD6A5C023246FA93C3CD99 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/getopt.c */; settings = {COMPILER_FLAGS = ""; }; };
		91E6542B4FB842B297B6B9E2 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/cocoa_monitor.m */ = {isa = PBXBuildFile; fileRef = DDB1503CED10484C97DDA196 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/cocoa_monitor.m */; settings = {COMPILER_FLAGS = ""; }; };
		929FAB9908114A82B6698FC8 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/Cube.cpp */ = {isa = PBXBuildFile; fileRef = DF8BFA9B2A25498F89F40C97 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/Cube.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		92DE833BC8584052BCAAB680 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/getopt.h */ = {isa = PBXBuildFile; fileRef = 4B0DC62F869B4195BB2F8F20 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/getopt.h */; settings = {COMPILER_FLAGS = ""; }; };
		9400C0D9B5A64111B8850AE0 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/TriangleBuffer.cpp */ = {isa = PBXBuildFile; fileRef = 1062324AC73B4347B4F41111 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/TriangleBuffer.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		9644498130874D39A5FA879B /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/getopt.c */ = {isa = PBXBuildFile; fileRef = 24CB2B5BA43941C18CE14D82 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/getopt.c */; settings = {COMPILER_FLAGS = ""; }; };
		9773AA6E8561420A9F1331A7 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/getopt.h */ = {isa = PBXBuildFile; fileRef = C2D3B4A22658488C98D44D04 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/getopt.h */; settings = {COMPILER_FLAGS = ""; }; };
		9D7FF0B035FF4A0783E96D08 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/cocoa_init.m */ = {isa = PBXBuildFile; fileRef = D90FDF3B93934456AA89EDFC /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/cocoa_init.m */; settings = {COMPILER_FLAGS = ""; }; };
		A04C1BFC2D0E490F947D7167 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/getopt.h */ = {isa = PBXBuildFile; fileRef = 83DFE2C3DAC6408E9F280DE0 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/getopt.h */; settings = {COMPILER_FLAGS = ""; }; };
		A33BA445EF3C4EE1949B3C18 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 973656E910B14B2C846186A9 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/CMakeLists.txt */; settings = {COMPILER_FLAGS = ""; }; };
		A56DEF6974D64F948C4628F4 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/nsgl_context.m */ = {isa = PBXBuildFile; fileRef = 8CB8C917EF0748269B27FE75 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/nsgl_context.m */; settings = {COMPILER_FLAGS = ""; }; };
		A8B3F4B9FAD7480C971D9080 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/Version.cpp */ = {isa = PBXBuildFile; fileRef = 31C6BE884305488191CE0383 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/Version.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		A8D54B8CC59A45A48EC5B284 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = C35CEC53CB1C4F239E3AB7E6 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/CMakeLists.txt */; settings = {COMPILER_FLAGS = ""; }; };
		B0296F03EA074C5DBA365731 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/Texture.cpp */ = {isa = PBXBuildFile; fileRef = 4E12036B9C7541579BB0F2AB /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/Texture.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		B3C5F6458C2C423B84CD68AC /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 6A5ACCD166F44FC4A19C4739 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/CMakeLists.txt */; settings = {COMPILER_FLAGS = ""; }; };
		BB1951F49DED42F49A543A2D /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/getopt.c */ = {isa = PBXBuildFile; fileRef = AFFC52A1D9C84391BE1405EF /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/getopt.c */; settings = {COMPILER_FLAGS = ""; }; };
		BB5388741B4C48DABEC26728 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/cocoa_window.m */ = {isa = PBXBuildFile; fileRef = BB83553821E749DE97584875 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/cocoa_window.m */; settings = {COMPILER_FLAGS = ""; }; };
		BF4836E5206549FD803C4A44 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/getopt.c */ = {isa = PBXBuildFile; fileRef = A26DA914CEBC4DD98EE365AE /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/getopt.c */; settings = {COMPILER_FLAGS = ""; }; };
		BF5EA18053444437ABFF367F /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/monitor.c */ = {isa = PBXBuildFile; fileRef = 013863A7303743CB8F900523 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/monitor.c */; settings = {COMPILER_FLAGS = ""; }; };
		BFBC0D0F51584F579E870CF9 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/getopt.c */ = {isa = PBXBuildFile; fileRef = 03F89BE923AC4D6B8E7B135A /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/getopt.c */; settings = {COMPILER_FLAGS = ""; }; };
		C4AC62174B2F40519571F823 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = E8B40B8DB73B4A06B9F9249C /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */; settings = {COMPILER_FLAGS = ""; }; };
		C626774BF3964B60BA69514E /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 22C8A2C50C2B4C3193E3820C /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/CMakeLists.txt */; settings = {COMPILER_FLAGS = ""; }; };
		C62A21B73A0846B4ADFAFF84 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/tinycthread.c */ = {isa = PBXBuildFile; fileRef = FFD347C4AFE4491E86A6FCD4 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/tinycthread.c */; settings = {COMPILER_FLAGS = ""; }; };
		C6447CB3B254494AB7401B19 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/Model.cpp */ = {isa = PBXBuildFile; fileRef = 82F25872B3B84A5B9D65C7E1 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/Model.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		C7250FFEE1BF4F1D85932D8C /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = B0A8B46D5E2244908D534392 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */; settings = {COMPILER_FLAGS = ""; }; };
		C8270024A3504C4A98C38DED /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/ImmediateTriangles.cpp */ = {isa = PBXBuildFile; fileRef = 75AACC6BE40E477B96E6FB0E /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/ImmediateTriangles.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		CAB0CD3EF4A64091BE45D580 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/time.c */ = {isa = PBXBuildFile; fileRef = 48D1D9ADE21D45EFB3CDA2EF /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/time.c */; settings = {COMPILER_FLAGS = ""; }; };
		CB15030ED9724349A8394FD0 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/defaults.c */ = {isa = PBXBuildFile; fileRef = FD07A8E59B43467E985F9F72 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/defaults.c */; settings = {COMPILER_FLAGS = ""; }; };
		CD12252B670849ACA6D90735 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/clipboard.c */ = {isa = PBXBuildFile; fileRef = C0E8DB8DD6BD423097A05320 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/clipboard.c */; settings = {COMPILER_FLAGS = ""; }; };
		CEEFC794C7054EDFA00665EF /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 841C3F473D774CF88D8222C0 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/CMakeLists.txt */; settings = {COMPILER_FLAGS = ""; }; };
		D07F1627AD1F487AA27ACBE1 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/nsgl_platform.h */ = {isa = PBXBuildFile; fileRef = 9C3B000A044148E397C7FB59 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/nsgl_platform.h */; settings = {COMPILER_FLAGS = ""; }; };
		D0DA6AB25A1545D1A18DE8A7 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 1B032243012C40A8BEAAB87E /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */; settings = {COMPILER_FLAGS = ""; }; };
		D0FF86CAED424E3282A40BDE /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/context.c */ = {isa = PBXBuildFile; fileRef = AC373B018BC24B54BC0A04F4 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/context.c */; settings = {COMPILER_FLAGS = ""; }; };
		D3E7F98A6E754652B793A5C2 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests/CMakeFiles/threads.dir/Info.plist */ = {isa = PBXBuildFile; fileRef = 5E4E7F52DA79483882CD7FCB /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests/CMakeFiles/threads.dir/Info.plist */; settings = {COMPILER_FLAGS = ""; }; };
		D9D1AF976BDF46BC93BF22A4 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/events.c */ = {isa = PBXBuildFile; fileRef = AA1F30608F4B4CF3A32F1B27 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/events.c */; settings = {COMPILER_FLAGS = ""; }; };
		DAFF66106A38495BAAC8F665 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/joysticks.c */ = {isa = PBXBuildFile; fileRef = 377B80A6AAB7412589184832 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/joysticks.c */; settings = {COMPILER_FLAGS = ""; }; };
		E035E910CF1D4C199D409134 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 5746967E418842E38C79165F /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */; settings = {COMPILER_FLAGS = ""; }; };
		E08EDA1D46DF4F0392C292D5 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 291398BF7C3D4A42896A6DDC /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */; settings = {COMPILER_FLAGS = ""; }; };
		E190B5E73E914616B85AB1AD /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 098CDDDD9C0B43CDAFB04917 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/CMakeLists.txt */; settings = {COMPILER_FLAGS = ""; }; };
		E1FE79DABB084FF8B4823B6A /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/tearing.c */ = {isa = PBXBuildFile; fileRef = 7E68B45B95AB4647B80F1656 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/tearing.c */; settings = {COMPILER_FLAGS = ""; }; };
		E6B00F18C95E467E93C1EA29 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/getopt.c */ = {isa = PBXBuildFile; fileRef = EF8E281B94004D379BB16EA0 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/getopt.c */; settings = {COMPILER_FLAGS = ""; }; };
		EC0ED0696E304F5C84A2EBD4 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/ModelView.cpp */ = {isa = PBXBuildFile; fileRef = 726656B87BA74A3C86AB5D77 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/ModelView.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		EF88C518A1D74F0EB3D87D2D /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/sharing.c */ = {isa = PBXBuildFile; fileRef = AE5FAD5143D540BD89214A97 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/sharing.c */; settings = {COMPILER_FLAGS = ""; }; };
		F10C57BBBF3445F29588BDD9 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/getopt.c */ = {isa = PBXBuildFile; fileRef = 0AB82EB67BD64DEBA0D0304A /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/getopt.c */; settings = {COMPILER_FLAGS = ""; }; };
		F132355D17AC485AB54B1C53 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests/CMakeFiles/accuracy.dir/Info.plist */ = {isa = PBXBuildFile; fileRef = 5EFB34CD1E9B4B0781666F7B /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests/CMakeFiles/accuracy.dir/Info.plist */; settings = {COMPILER_FLAGS = ""; }; };
		F18F52491C0349EEBC784D4C /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/Extensions.cpp */ = {isa = PBXBuildFile; fileRef = E6551A185CAB4526A74D21AD /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/Extensions.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		F4C238F406AE4D78AEE229CD /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 6FDC64B827984C0181B960EA /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */; settings = {COMPILER_FLAGS = ""; }; };
		F533E66231AD4326B4FF3F53 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/glfw_config.h */ = {isa = PBXBuildFile; fileRef = E2298AB211634EB880976746 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/glfw_config.h */; settings = {COMPILER_FLAGS = ""; }; };
		F75A155B2C63454F99502BB1 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 0E9B962506934CB3A42ABCE9 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */; settings = {COMPILER_FLAGS = ""; }; };
		F9C6993DB5C3429895B43B57 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/getopt.h */ = {isa = PBXBuildFile; fileRef = B22963FB18064BEA9D31354A /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/getopt.h */; settings = {COMPILER_FLAGS = ""; }; };
		FAEC2967B1BD4516BEA996E0 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 0A416697654F473D8550DC0F /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */; settings = {COMPILER_FLAGS = ""; }; };
		FC3C90C325DE4DC294D4574E /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 6480C723D1B64B06B413106D /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/CMakeLists.txt */; settings = {COMPILER_FLAGS = ""; }; };
		FC8427E9B98A45DD8C37172B /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/title.c */ = {isa = PBXBuildFile; fileRef = 19D177944FAA4BE38665913E /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/title.c */; settings = {COMPILER_FLAGS = ""; }; };
/* End PBXBuildFile section */

/* Begin PBXBuildStyle section */
		527E0A034FC24432AE7359E8 /* MinSizeRel */ = {
			isa = PBXBuildStyle;
			buildSettings = {
				COPY_PHASE_STRIP = NO;
			};
			name = MinSizeRel;
		};
		698125978C1B4260845298E8 /* RelWithDebInfo */ = {
			isa = PBXBuildStyle;
			buildSettings = {
				COPY_PHASE_STRIP = NO;
			};
			name = RelWithDebInfo;
		};
		761814BC965741398D4E8F94 = {
			isa = PBXBuildStyle;
		};
		85852379C5294158B0F01AA3 /* Release */ = {
			isa = PBXBuildStyle;
			buildSettings = {
				COPY_PHASE_STRIP = NO;
			};
			name = Release;
		};
		9EF57CA954F44F1E837B0A6D /* Debug */ = {
			isa = PBXBuildStyle;
			buildSettings = {
				COPY_PHASE_STRIP = NO;
			};
			name = Debug;
		};
/* End PBXBuildStyle section */

/* Begin PBXContainerItemProxy section */
		015BBED0393245BC9F0F452E /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 3BB51AEE4C9242C39899D3C0;
			remoteInfo = Version;
		};
		0639A742DEE3407DA4296C29 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D1BDF48FD8FD4353A35A71E4;
			remoteInfo = ZERO_CHECK;
		};
		0BDE11D9FC7747BE8A4C682C /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 36C64F7CCFF34B3EA79D7531;
			remoteInfo = joysticks;
		};
		0EEE09906A14405888EC14CE /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8D8C5716D5B049C3B8283A0D;
			remoteInfo = iconify;
		};
		11B7FBA081FC4B11AFD8A6DB /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D1BDF48FD8FD4353A35A71E4;
			remoteInfo = ZERO_CHECK;
		};
		11D4CAEDD92C4AC3969E4F90 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = FA1A94DF7A674DA0A959AFA4;
			remoteInfo = TriangleOrtho;
		};
		13419A2FC08E484497B3E6BB /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D1BDF48FD8FD4353A35A71E4;
			remoteInfo = ZERO_CHECK;
		};
		14F75CBAF1744C8286D3D851 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D1BDF48FD8FD4353A35A71E4;
			remoteInfo = ZERO_CHECK;
		};
		16040A57A3D2421EBB4F42CD /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D1BDF48FD8FD4353A35A71E4;
			remoteInfo = ZERO_CHECK;
		};
		160CA68AA16D487D8A17CB58 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 589858B3D9CF47DDBBE17F25;
			remoteInfo = defaults;
		};
		176EB5646C12464694DFED8A /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D1BDF48FD8FD4353A35A71E4;
			remoteInfo = ZERO_CHECK;
		};
		1901F411CB6642AB9CC2C830 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55B0EB4BC6AA4DDCA3D5ECE1;
			remoteInfo = peter;
		};
		1B9258D627E7492F9021A117 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = C443643F4717459BA0F7BB94;
			remoteInfo = events;
		};
		1BDA0AA75CD74F76AEF309EB /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = BDE3C89AC5D8432EB0724818;
			remoteInfo = glfw;
		};
		1BF54CF9B5DE42DAAB8756F3 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D1BDF48FD8FD4353A35A71E4;
			remoteInfo = ZERO_CHECK;
		};
		1EC6DC4A15824132BCF99A78 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = A322ADC4785A499C9C2AEAFD;
			remoteInfo = glfwinfo;
		};
		1EF03AFF3A094B70B70DE045 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D1BDF48FD8FD4353A35A71E4;
			remoteInfo = ZERO_CHECK;
		};
		210A5AE4781C4445B7383212 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = BDE3C89AC5D8432EB0724818;
			remoteInfo = glfw;
		};
		21DC3239A19E4C43982B657E /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 15C7EB72C3E94A36879B0FB6;
			remoteInfo = ModelView;
		};
		22B4862A95504D52A2BFB422 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 6A050A6FDFF14C2FA6CC589A;
			remoteInfo = Lighting;
		};
		242EC4FFFB9343AB9BE60228 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D1BDF48FD8FD4353A35A71E4;
			remoteInfo = ZERO_CHECK;
		};
		2566CCC5238C4DE585F90CC0 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = BDE3C89AC5D8432EB0724818;
			remoteInfo = glfw;
		};
		2C5EA658C2584F77896C4A55 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = BDE3C89AC5D8432EB0724818;
			remoteInfo = glfw;
		};
		31F0892BDD844A7E9AA051DE /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 5D032148F2D5403EABBAA95E;
			remoteInfo = DynamicMesh;
		};
		3228361552274E788F0FF197 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D1BDF48FD8FD4353A35A71E4;
			remoteInfo = ZERO_CHECK;
		};
		3300C0200C854A60A143D381 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D1BDF48FD8FD4353A35A71E4;
			remoteInfo = ZERO_CHECK;
		};
		39474759B66348D6B6B05963 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = C569E1EA76B648F8A072F7E1;
			remoteInfo = Model;
		};
		39E2D727437B417FAAED6BEA /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D1BDF48FD8FD4353A35A71E4;
			remoteInfo = ZERO_CHECK;
		};
		3B8652AD539F4E329D7E10BA /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = BDE3C89AC5D8432EB0724818;
			remoteInfo = glfw;
		};
		3CDBDA3E2CC84460857E1682 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D1BDF48FD8FD4353A35A71E4;
			remoteInfo = ZERO_CHECK;
		};
		3D9B6A550BA54E17BF00B92B /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = BDE3C89AC5D8432EB0724818;
			remoteInfo = glfw;
		};
		3E77B27EF0134F278D582AFB /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = BDE3C89AC5D8432EB0724818;
			remoteInfo = glfw;
		};
		442D09CAF8DE42C29AB8D525 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = C0AD1F187A0B48B992F0119D;
			remoteInfo = reopen;
		};
		4618FF5F634B4B6A93A928F7 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D1BDF48FD8FD4353A35A71E4;
			remoteInfo = ZERO_CHECK;
		};
		46DB9F9ECF224620838D6D23 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = BDE3C89AC5D8432EB0724818;
			remoteInfo = glfw;
		};
		480858BA562040F08E406B71 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = BDE3C89AC5D8432EB0724818;
			remoteInfo = glfw;
		};
		48494E8D82F14E1A9ACEAEAA /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D1BDF48FD8FD4353A35A71E4;
			remoteInfo = ZERO_CHECK;
		};
		48750853167E4DAEBF541C33 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = BDE3C89AC5D8432EB0724818;
			remoteInfo = glfw;
		};
		4AFC57B1B1FD4F4883D775C7 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = A641D9E0EE4741AFB160CDB6;
			remoteInfo = threads;
		};
		4BD7178730094D2DA190DC10 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 6ED44D93C81540C5ABF4F21E;
			remoteInfo = sharing;
		};
		4C16A59375D74B70BF0D186D /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D1BDF48FD8FD4353A35A71E4;
			remoteInfo = ZERO_CHECK;
		};
		4E0D1C3538F14FBCAD99DB7D /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = BDE3C89AC5D8432EB0724818;
			remoteInfo = glfw;
		};
		55449B74D86E4206AB93B1D4 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D1BDF48FD8FD4353A35A71E4;
			remoteInfo = ZERO_CHECK;
		};
		55BF522367BB4092A389EAD7 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = BDE3C89AC5D8432EB0724818;
			remoteInfo = glfw;
		};
		574ABEEC012245E0821F80C1 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = BDE3C89AC5D8432EB0724818;
			remoteInfo = glfw;
		};
		58C88750F30540B09BBC8CE8 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D1BDF48FD8FD4353A35A71E4;
			remoteInfo = ZERO_CHECK;
		};
		5983923FDD194D3BA71F0190 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = BDE3C89AC5D8432EB0724818;
			remoteInfo = glfw;
		};
		59DC04F3C6234372BDBF660E /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = BDE3C89AC5D8432EB0724818;
			remoteInfo = glfw;
		};
		5B5BF73AEDF84751AE1AAA7D /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = BDE3C89AC5D8432EB0724818;
			remoteInfo = glfw;
		};
		5BFCC607A4314549A725CDCE /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = BDE3C89AC5D8432EB0724818;
			remoteInfo = glfw;
		};
		5CDC11D01E36429EA0A48A8F /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = BDE3C89AC5D8432EB0724818;
			remoteInfo = glfw;
		};
		5EBEA154AB4D45A9952FB47B /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = BDE3C89AC5D8432EB0724818;
			remoteInfo = glfw;
		};
		63D598B625604979988E39D3 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D0335718601B4473AE98185E;
			remoteInfo = gamma;
		};
		667FE326EB3E43C68C8925D5 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D1BDF48FD8FD4353A35A71E4;
			remoteInfo = ZERO_CHECK;
		};
		6FAF97BFCC634A0C89B8B4C1 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = BDE3C89AC5D8432EB0724818;
			remoteInfo = glfw;
		};
		71576F3B02B3438D8DEABE04 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D1BDF48FD8FD4353A35A71E4;
			remoteInfo = ZERO_CHECK;
		};
		730F8E4D979541B1AF732CE6 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D1BDF48FD8FD4353A35A71E4;
			remoteInfo = ZERO_CHECK;
		};
		77542DDD10F4468381331995 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D1BDF48FD8FD4353A35A71E4;
			remoteInfo = ZERO_CHECK;
		};
		785ECB1EE5884CF38F104773 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D1BDF48FD8FD4353A35A71E4;
			remoteInfo = ZERO_CHECK;
		};
		7AD47C2DA72045B6BC9EC565 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D1BDF48FD8FD4353A35A71E4;
			remoteInfo = ZERO_CHECK;
		};
		7AFE5905A4914EC4814709CC /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = E428435B102C48A38B746184;
			remoteInfo = Cube;
		};
		7CAD589562CE472E99CCF281 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D1BDF48FD8FD4353A35A71E4;
			remoteInfo = ZERO_CHECK;
		};
		7FFAF90B03BB492CBD395615 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = BDE3C89AC5D8432EB0724818;
			remoteInfo = glfw;
		};
		84809CFA02D845EEA0212B1E /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = DBF30549174341009A49685D;
			remoteInfo = modes;
		};
		84FC7B7D0FC64E4890A7A0E1 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = BDE3C89AC5D8432EB0724818;
			remoteInfo = glfw;
		};
		87502BC8B9E543F29D0C4BE4 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D1BDF48FD8FD4353A35A71E4;
			remoteInfo = ZERO_CHECK;
		};
		8AD40DF3207B43638FF18648 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 897ED64C6CFB4B68BB62C02B;
			remoteInfo = TriangleColorBuffer;
		};
		8B129469772B43EAB6B636BA /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D1BDF48FD8FD4353A35A71E4;
			remoteInfo = ZERO_CHECK;
		};
		8DAE5C433AAF4515B965850F /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = BDE3C89AC5D8432EB0724818;
			remoteInfo = glfw;
		};
		946C30F1F0C2425C9CECDD38 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = B9D2CDE3D70549DEA90BF931;
			remoteInfo = Immediate;
		};
		94E9E2301D7041DCAFD673EF /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = BDE3C89AC5D8432EB0724818;
			remoteInfo = glfw;
		};
		9681C3B757934D34AB39F14B /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 11FBAE78E67D4CB899DD161C;
			remoteInfo = Texture;
		};
		9CC8B20F853E4715B5757BF4 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = BDE3C89AC5D8432EB0724818;
			remoteInfo = glfw;
		};
		9E8D7CCD78004AEAB6EB4824 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D1BDF48FD8FD4353A35A71E4;
			remoteInfo = ZERO_CHECK;
		};
		9E973E43210F470DAB29D92D /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = BDE3C89AC5D8432EB0724818;
			remoteInfo = glfw;
		};
		A22991B55C4D43719B244AA6 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = BDE3C89AC5D8432EB0724818;
			remoteInfo = glfw;
		};
		A501FC40CA8447E2AC56F5B6 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = A1E9731CC5B9466A916C82D5;
			remoteInfo = LightingAndTexture;
		};
		A70C4008D3E840D9919B80F7 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = BDE3C89AC5D8432EB0724818;
			remoteInfo = glfw;
		};
		AC3407F765B44388BBAEA819 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 1AA25737399D4122881D3626;
			remoteInfo = title;
		};
		AD3C2CA4E9244F33950ADA1C /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 6776F94C10EA4DDCA85329A5;
			remoteInfo = Keyboard;
		};
		B02C5953A89440B8909A80B6 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D1BDF48FD8FD4353A35A71E4;
			remoteInfo = ZERO_CHECK;
		};
		B18AF9AEC52C4F5F8606861A /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 6B9207DFB3DA4F51A7FF5C46;
			remoteInfo = GLFWwindow;
		};
		B38BD0902A3A499AA0502012 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = ABA061AFB00A40BDBADD9EEB;
			remoteInfo = GLFWApp;
		};
		B713D60360534A52B2DB3BC9 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D1BDF48FD8FD4353A35A71E4;
			remoteInfo = ZERO_CHECK;
		};
		B929DA8F85DC431A8FEFF6B0 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = BDE3C89AC5D8432EB0724818;
			remoteInfo = glfw;
		};
		BA715EE6C64F4E919D7864D4 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 92C9D52D3445414F8511509E;
			remoteInfo = Extensions;
		};
		BC35399A88DE472B80B2EEDA /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D1BDF48FD8FD4353A35A71E4;
			remoteInfo = ZERO_CHECK;
		};
		C8E31E532D07480A8DF452B4 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D1BDF48FD8FD4353A35A71E4;
			remoteInfo = ZERO_CHECK;
		};
		CD1BFF5697D5446597E0988E /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D1BDF48FD8FD4353A35A71E4;
			remoteInfo = ZERO_CHECK;
		};
		D04F240135FB46A9A2D14765 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = BDE3C89AC5D8432EB0724818;
			remoteInfo = glfw;
		};
		D367A86D65644403A5925EBA /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D1BDF48FD8FD4353A35A71E4;
			remoteInfo = ZERO_CHECK;
		};
		D69738AE26704BA59DA7158C /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = BE4AE7D2D04745A2B7B33E5F;
			remoteInfo = TextureLoader;
		};
		D86DBCE81BB44B8A948F5179 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = BDE3C89AC5D8432EB0724818;
			remoteInfo = glfw;
		};
		D8D98CA36A78459EA85BD3AF /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D1BDF48FD8FD4353A35A71E4;
			remoteInfo = ZERO_CHECK;
		};
		D939CC0011DB4032AB69F7E5 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7CCA9764AF884A5BA0F567C2;
			remoteInfo = clipboard;
		};
		DD4BBC6ACF7643CB90472CE2 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = BDE3C89AC5D8432EB0724818;
			remoteInfo = glfw;
		};
		DF285E7092E8468EAB909ADB /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D1BDF48FD8FD4353A35A71E4;
			remoteInfo = ZERO_CHECK;
		};
		DF3F0B56AB91487CBFE14BB4 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = BDE3C89AC5D8432EB0724818;
			remoteInfo = glfw;
		};
		E1300B4AC856438CAE764AAD /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 776D7F9DB09B496ABA01513D;
			remoteInfo = windows;
		};
		E7A009ED6B75425DA1859B93 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = A812115358A44C188AA222D3;
			remoteInfo = tearing;
		};
		E900A70CDFFD4AADA917DD0F /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = AC46AF086FB94535AD86558E;
			remoteInfo = ALL_BUILD;
		};
		EA8E9FF2B46F4813B5FFF5ED /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = BDE3C89AC5D8432EB0724818;
			remoteInfo = glfw;
		};
		EC4C7FFB29254147BD6FA7F2 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 402683BDEBBA404E949853DD;
			remoteInfo = fsaa;
		};
		EE9451086E664AB38C6ED390 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = BDE3C89AC5D8432EB0724818;
			remoteInfo = glfw;
		};
		EF1BEA6769394085AA1927DE /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 48D14F9E891C4241BDC0284D;
			remoteInfo = TriangleBuffer;
		};
		EF41C542E407456AB290DB69 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 0B147D42A3F24CBEA2A2AEB8;
			remoteInfo = Mouse;
		};
		F116A2A3ED024F22A7B53214 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = BDE3C89AC5D8432EB0724818;
			remoteInfo = glfw;
		};
		F3A69D8F5D1E45FEA6EA9DA7 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = C6FC65BFE2BD4B848208F4F0;
			remoteInfo = ImmediateTriangles;
		};
		F45243622356412C97BCFB40 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = BDE3C89AC5D8432EB0724818;
			remoteInfo = glfw;
		};
		FC5DE02997C5444385FE777B /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8A0B984A8AE24D61976E96D9;
			remoteInfo = accuracy;
		};
		FDE05267DBD14E88BF73BD9C /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D1BDF48FD8FD4353A35A71E4;
			remoteInfo = ZERO_CHECK;
		};
		FF48E560C2814E9D96430C0E /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = F5E098188F82442E84BE60E5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D1BDF48FD8FD4353A35A71E4;
			remoteInfo = ZERO_CHECK;
		};
/* End PBXContainerItemProxy section */

/* Begin PBXFileReference section */
		0033636051544F3C95055E55 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/TextureLoader.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = TextureLoader.cpp; path = examples/TextureLoader.cpp; sourceTree = SOURCE_ROOT; };
		013863A7303743CB8F900523 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/monitor.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = monitor.c; path = glfw/src/monitor.c; sourceTree = SOURCE_ROOT; };
		03264C64EA274CAB8657A7F2 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = glfw/tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		03F89BE923AC4D6B8E7B135A /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/getopt.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = getopt.c; path = glfw/deps/getopt.c; sourceTree = SOURCE_ROOT; };
		04846186790A4AA093B8E4BE /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/fsaa.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = fsaa.c; path = glfw/tests/fsaa.c; sourceTree = SOURCE_ROOT; };
		0490D471ABAE431C92F46EBB /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/Lighting.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = Lighting.cpp; path = examples/Lighting.cpp; sourceTree = SOURCE_ROOT; };
		058BDC19F2644CAD8CD8CD5A /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/accuracy.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = accuracy.c; path = glfw/tests/accuracy.c; sourceTree = SOURCE_ROOT; };
		08BD4584CB5C47C1A1D2D981 /* sharing */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = sharing; refType = 0; sourceTree = BUILT_PRODUCTS_DIR; };
		098CDDDD9C0B43CDAFB04917 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = glfw/tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		0A12F201A4994309B56D79A3 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/peter.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = peter.c; path = glfw/tests/peter.c; sourceTree = SOURCE_ROOT; };
		0A416697654F473D8550DC0F /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		0AB82EB67BD64DEBA0D0304A /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/getopt.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = getopt.c; path = glfw/deps/getopt.c; sourceTree = SOURCE_ROOT; };
		0B2318A2E8544DFE9F5348CC /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = glfw/tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		0E9B962506934CB3A42ABCE9 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		0ED66F47250F44FE8CE72AA9 /* GLFWwindow */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = GLFWwindow; refType = 0; sourceTree = BUILT_PRODUCTS_DIR; };
		0F4CDEEB03DB4F79A4950C37 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/reopen.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = reopen.c; path = glfw/tests/reopen.c; sourceTree = SOURCE_ROOT; };
		1062324AC73B4347B4F41111 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/TriangleBuffer.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = TriangleBuffer.cpp; path = examples/TriangleBuffer.cpp; sourceTree = SOURCE_ROOT; };
		106AE81F56E44B9BA83136BD /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/init.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = init.c; path = glfw/src/init.c; sourceTree = SOURCE_ROOT; };
		1291F7925FDB4085B2BB7ECC /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/GLFWwindow.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = GLFWwindow.cpp; path = examples/GLFWwindow.cpp; sourceTree = SOURCE_ROOT; };
		18DD15F90D61469D96DD7EED /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/cocoa_gamma.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = cocoa_gamma.c; path = glfw/src/cocoa_gamma.c; sourceTree = SOURCE_ROOT; };
		19D177944FAA4BE38665913E /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/title.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = title.c; path = glfw/tests/title.c; sourceTree = SOURCE_ROOT; };
		1B032243012C40A8BEAAB87E /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		1BF412177B0E492CBC6B271F /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/Keyboard.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = Keyboard.cpp; path = examples/Keyboard.cpp; sourceTree = SOURCE_ROOT; };
		1C199621ADB04839829EAF78 /* accuracy */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = accuracy; refType = 0; sourceTree = BUILT_PRODUCTS_DIR; };
		1D7C9CDA339540D09EFEF695 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/glfwinfo.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = glfwinfo.c; path = glfw/tests/glfwinfo.c; sourceTree = SOURCE_ROOT; };
		213FE68F0F3D43D7A885F087 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = glfw/tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		22C8A2C50C2B4C3193E3820C /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = glfw/tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		22D140A18418456A99FEFEEF /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = glfw/tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		238888B85C24492789AE8A8B /* clipboard */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = clipboard; refType = 0; sourceTree = BUILT_PRODUCTS_DIR; };
		24CB2B5BA43941C18CE14D82 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/getopt.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = getopt.c; path = glfw/deps/getopt.c; sourceTree = SOURCE_ROOT; };
		279121123D4147F7A163A85C /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/LightingAndTexture.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = LightingAndTexture.cpp; path = examples/LightingAndTexture.cpp; sourceTree = SOURCE_ROOT; };
		291398BF7C3D4A42896A6DDC /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		29895EA332CF45F7BBE24CE5 /* ModelView */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = ModelView; refType = 0; sourceTree = BUILT_PRODUCTS_DIR; };
		2C0E7D200DBF437A81E29F0E /* windows */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = windows; refType = 0; sourceTree = BUILT_PRODUCTS_DIR; };
		2DC252E4832D4ED189383FAC /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		30F67E5E7CD5499EAA75E3EF /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/DynamicMesh.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = DynamicMesh.cpp; path = examples/DynamicMesh.cpp; sourceTree = SOURCE_ROOT; };
		31C6BE884305488191CE0383 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/Version.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = Version.cpp; path = examples/Version.cpp; sourceTree = SOURCE_ROOT; };
		3567D43CD64548ABA72AB714 /* Model */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = Model; refType = 0; sourceTree = BUILT_PRODUCTS_DIR; };
		36AA372F78264FA694889574 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = glfw/tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		377B80A6AAB7412589184832 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/joysticks.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = joysticks.c; path = glfw/tests/joysticks.c; sourceTree = SOURCE_ROOT; };
		42DD914DA8AE4D26B22675A9 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		46F020B1F911499D85891539 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = glfw/tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		48D1D9ADE21D45EFB3CDA2EF /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/time.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = time.c; path = glfw/src/time.c; sourceTree = SOURCE_ROOT; };
		4B0DC62F869B4195BB2F8F20 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/getopt.h */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.h; fileEncoding = 4; name = getopt.h; path = glfw/deps/getopt.h; sourceTree = SOURCE_ROOT; };
		4BEC18CE1C0B483F90BED1B7 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/clipboard.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = clipboard.c; path = glfw/src/clipboard.c; sourceTree = SOURCE_ROOT; };
		4DC451E0D8904E519AF465DE /* ImmediateTriangles */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = ImmediateTriangles; refType = 0; sourceTree = BUILT_PRODUCTS_DIR; };
		4E12036B9C7541579BB0F2AB /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/Texture.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = Texture.cpp; path = examples/Texture.cpp; sourceTree = SOURCE_ROOT; };
		53A644CB3919417CBA38CABC /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = glfw/tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		55E237406E2B410F8BEC94B9 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/input.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = input.c; path = glfw/src/input.c; sourceTree = SOURCE_ROOT; };
		567A62C11D194AD1A1A704F8 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		5698AB5A8000466BB4B27646 /* TriangleBuffer */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = TriangleBuffer; refType = 0; sourceTree = BUILT_PRODUCTS_DIR; };
		56AB15B900054933B542CD64 /* tearing */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = tearing; refType = 0; sourceTree = BUILT_PRODUCTS_DIR; };
		56F0320FA72443FE89BC13A7 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/GLFWApp.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = GLFWApp.cpp; path = examples/GLFWApp.cpp; sourceTree = SOURCE_ROOT; };
		5746967E418842E38C79165F /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		5AB1E84BCCED42C78A744C84 /* events */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = events; refType = 0; sourceTree = BUILT_PRODUCTS_DIR; };
		5C491441D37540E18F08F3ED /* Keyboard */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = Keyboard; refType = 0; sourceTree = BUILT_PRODUCTS_DIR; };
		5E4E7F52DA79483882CD7FCB /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests/CMakeFiles/threads.dir/Info.plist */ = {isa = PBXFileReference; explicitFileType = sourcecode.text.plist; fileEncoding = 4; name = Info.plist; path = xcode/glfw/tests/CMakeFiles/threads.dir/Info.plist; sourceTree = SOURCE_ROOT; };
		5EFB34CD1E9B4B0781666F7B /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests/CMakeFiles/accuracy.dir/Info.plist */ = {isa = PBXFileReference; explicitFileType = sourcecode.text.plist; fileEncoding = 4; name = Info.plist; path = xcode/glfw/tests/CMakeFiles/accuracy.dir/Info.plist; sourceTree = SOURCE_ROOT; };
		62C6B9CF4FB6411097C45AE7 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/TriangleColorBuffer.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = TriangleColorBuffer.cpp; path = examples/TriangleColorBuffer.cpp; sourceTree = SOURCE_ROOT; };
		6480C723D1B64B06B413106D /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = glfw/tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		6A5ACCD166F44FC4A19C4739 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = glfw/tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		6ACCE65FC37542F381AAFA76 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = glfw/tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		6BF72962D5534DA6A58DBFE6 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		6FDC64B827984C0181B960EA /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		721103F44ADD4E65950521C2 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = glfw/tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		726656B87BA74A3C86AB5D77 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/ModelView.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = ModelView.cpp; path = examples/ModelView.cpp; sourceTree = SOURCE_ROOT; };
		75AACC6BE40E477B96E6FB0E /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/ImmediateTriangles.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = ImmediateTriangles.cpp; path = examples/ImmediateTriangles.cpp; sourceTree = SOURCE_ROOT; };
		75E918B2855045908CC16AD7 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/tinycthread.h */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.h; fileEncoding = 4; name = tinycthread.h; path = glfw/deps/tinycthread.h; sourceTree = SOURCE_ROOT; };
		764940F7C24542DFBD2A4C73 /* Cube */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = Cube; refType = 0; sourceTree = BUILT_PRODUCTS_DIR; };
		77696700027D4589B70529E4 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/windows.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = windows.c; path = glfw/tests/windows.c; sourceTree = SOURCE_ROOT; };
		7788C3B262904C829459E955 /* DynamicMesh */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = DynamicMesh; refType = 0; sourceTree = BUILT_PRODUCTS_DIR; };
		7BED6C17256A4459B84C826F /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		7DCC9880582A4B13A6E5083B /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/Mouse.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = Mouse.cpp; path = examples/Mouse.cpp; sourceTree = SOURCE_ROOT; };
		7E68B45B95AB4647B80F1656 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/tearing.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = tearing.c; path = glfw/tests/tearing.c; sourceTree = SOURCE_ROOT; };
		7FD80AAE3F254EEA8FC4DAC0 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests/CMakeFiles/windows.dir/Info.plist */ = {isa = PBXFileReference; explicitFileType = sourcecode.text.plist; fileEncoding = 4; name = Info.plist; path = xcode/glfw/tests/CMakeFiles/windows.dir/Info.plist; sourceTree = SOURCE_ROOT; };
		82F25872B3B84A5B9D65C7E1 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/Model.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = Model.cpp; path = examples/Model.cpp; sourceTree = SOURCE_ROOT; };
		83DFE2C3DAC6408E9F280DE0 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/getopt.h */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.h; fileEncoding = 4; name = getopt.h; path = glfw/deps/getopt.h; sourceTree = SOURCE_ROOT; };
		841C3F473D774CF88D8222C0 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = glfw/tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		84A205F9FFCE49AE914B531F /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/window.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = window.c; path = glfw/src/window.c; sourceTree = SOURCE_ROOT; };
		858BFC3349E6461F9860B837 /* TriangleColorBuffer */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = TriangleColorBuffer; refType = 0; sourceTree = BUILT_PRODUCTS_DIR; };
		87E40BF334CB4C92A836C8A5 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/threads.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = threads.c; path = glfw/tests/threads.c; sourceTree = SOURCE_ROOT; };
		8C4AA5158816412192D549DE /* GLFWApp */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = GLFWApp; refType = 0; sourceTree = BUILT_PRODUCTS_DIR; };
		8CB8C917EF0748269B27FE75 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/nsgl_context.m */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.objc; fileEncoding = 4; name = nsgl_context.m; path = glfw/src/nsgl_context.m; sourceTree = SOURCE_ROOT; };
		8CFB98E7DD4947FD90208EFF /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/internal.h */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.h; fileEncoding = 4; name = internal.h; path = glfw/src/internal.h; sourceTree = SOURCE_ROOT; };
		8F84A165C6F74294AA6A0AA0 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/cocoa_joystick.m */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.objc; fileEncoding = 4; name = cocoa_joystick.m; path = glfw/src/cocoa_joystick.m; sourceTree = SOURCE_ROOT; };
		90A04D88BCA24B3D9777F43B /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		91C879491E3C4AD9BC7B2846 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include/GLFW/glfw3native.h */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.h; fileEncoding = 4; name = glfw3native.h; path = glfw/include/GLFW/glfw3native.h; sourceTree = SOURCE_ROOT; };
		935DACEAEFA547908DF401C0 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = glfw/tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		973656E910B14B2C846186A9 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = glfw/tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		9906937A07E74F3F934247D4 /* Version */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = Version; refType = 0; sourceTree = BUILT_PRODUCTS_DIR; };
		9911E58456754A529DB1D4CF /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/iconify.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = iconify.c; path = glfw/tests/iconify.c; sourceTree = SOURCE_ROOT; };
		9A6640E1CEA64CEDBFF3C945 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/joystick.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = joystick.c; path = glfw/src/joystick.c; sourceTree = SOURCE_ROOT; };
		9B9B4AE375EB4ED295FFFE60 /* reopen */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = reopen; refType = 0; sourceTree = BUILT_PRODUCTS_DIR; };
		9C3B000A044148E397C7FB59 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/nsgl_platform.h */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.h; fileEncoding = 4; name = nsgl_platform.h; path = glfw/src/nsgl_platform.h; sourceTree = SOURCE_ROOT; };
		A26DA914CEBC4DD98EE365AE /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/getopt.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = getopt.c; path = glfw/deps/getopt.c; sourceTree = SOURCE_ROOT; };
		A3B59E3A47D14BFDB1788007 /* Mouse */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = Mouse; refType = 0; sourceTree = BUILT_PRODUCTS_DIR; };
		A41A712AAE474849BC820474 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/gamma.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = gamma.c; path = glfw/src/gamma.c; sourceTree = SOURCE_ROOT; };
		A4FAF5F7992B46669422ABCA /* iconify */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = iconify; refType = 0; sourceTree = BUILT_PRODUCTS_DIR; };
		A875D1B93B4E4801B85A96A1 /* glfwinfo */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = glfwinfo; refType = 0; sourceTree = BUILT_PRODUCTS_DIR; };
		AA1F30608F4B4CF3A32F1B27 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/events.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = events.c; path = glfw/tests/events.c; sourceTree = SOURCE_ROOT; };
		ABB93B996DED46AFB462DD49 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests/CMakeFiles/sharing.dir/Info.plist */ = {isa = PBXFileReference; explicitFileType = sourcecode.text.plist; fileEncoding = 4; name = Info.plist; path = xcode/glfw/tests/CMakeFiles/sharing.dir/Info.plist; sourceTree = SOURCE_ROOT; };
		AC373B018BC24B54BC0A04F4 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/context.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = context.c; path = glfw/src/context.c; sourceTree = SOURCE_ROOT; };
		AD816F7F6CEC43289C6D635D /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		AE5FAD5143D540BD89214A97 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/sharing.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = sharing.c; path = glfw/tests/sharing.c; sourceTree = SOURCE_ROOT; };
		AFFC52A1D9C84391BE1405EF /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/getopt.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = getopt.c; path = glfw/deps/getopt.c; sourceTree = SOURCE_ROOT; };
		B06425755FFE4ECAA5B5C4E3 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/Immediate.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = Immediate.cpp; path = examples/Immediate.cpp; sourceTree = SOURCE_ROOT; };
		B0A8B46D5E2244908D534392 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		B0B31EB41B014F089B096547 /* joysticks */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = joysticks; refType = 0; sourceTree = BUILT_PRODUCTS_DIR; };
		B18B2C73BDE34008A161DC35 /* glfw */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = libglfw3.a; refType = 0; sourceTree = BUILT_PRODUCTS_DIR; };
		B1C83AE56CA24D4893223A72 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests/CMakeFiles/tearing.dir/Info.plist */ = {isa = PBXFileReference; explicitFileType = sourcecode.text.plist; fileEncoding = 4; name = Info.plist; path = xcode/glfw/tests/CMakeFiles/tearing.dir/Info.plist; sourceTree = SOURCE_ROOT; };
		B22963FB18064BEA9D31354A /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/getopt.h */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.h; fileEncoding = 4; name = getopt.h; path = glfw/deps/getopt.h; sourceTree = SOURCE_ROOT; };
		B6925A10CD6E4A3E9248E371 /* threads */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = threads; refType = 0; sourceTree = BUILT_PRODUCTS_DIR; };
		BB83553821E749DE97584875 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/cocoa_window.m */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.objc; fileEncoding = 4; name = cocoa_window.m; path = glfw/src/cocoa_window.m; sourceTree = SOURCE_ROOT; };
		BCFD4755F2FB45438CE05CC0 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		BD040387FB2241279F2F727F /* peter */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = peter; refType = 0; sourceTree = BUILT_PRODUCTS_DIR; };
		BDBA350AFC704901979247EE /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		BFFB86000CD4440DBB5D10BA /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include/GLFW/glfw3.h */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.h; fileEncoding = 4; name = glfw3.h; path = glfw/include/GLFW/glfw3.h; sourceTree = SOURCE_ROOT; };
		C02C912AAAA04DA0A78C6129 /* Texture */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = Texture; refType = 0; sourceTree = BUILT_PRODUCTS_DIR; };
		C0D3798B19AC4727A2FB4C65 /* modes */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = modes; refType = 0; sourceTree = BUILT_PRODUCTS_DIR; };
		C0E8DB8DD6BD423097A05320 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/clipboard.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = clipboard.c; path = glfw/tests/clipboard.c; sourceTree = SOURCE_ROOT; };
		C1500B56515D4F00BB5D8CB2 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		C2D3B4A22658488C98D44D04 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/getopt.h */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.h; fileEncoding = 4; name = getopt.h; path = glfw/deps/getopt.h; sourceTree = SOURCE_ROOT; };
		C35CEC53CB1C4F239E3AB7E6 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = glfw/src/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		C47D57A0AAA2411DAD9F474F /* Lighting */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = Lighting; refType = 0; sourceTree = BUILT_PRODUCTS_DIR; };
		C73211FDC4DC42CF93EC2E1F /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/cocoa_clipboard.m */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.objc; fileEncoding = 4; name = cocoa_clipboard.m; path = glfw/src/cocoa_clipboard.m; sourceTree = SOURCE_ROOT; };
		CA1166E19DD64F898AD87020 /* LightingAndTexture */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = LightingAndTexture; refType = 0; sourceTree = BUILT_PRODUCTS_DIR; };
		CCA27134AF8D46C4A8C21EF4 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		CD5D871B3F2F4A65BDD5A31A /* Extensions */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = Extensions; refType = 0; sourceTree = BUILT_PRODUCTS_DIR; };
		D179AB3E107948FE8A68DD43 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = glfw/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		D266163AD5264BCF9CD1C948 /* title */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = title; refType = 0; sourceTree = BUILT_PRODUCTS_DIR; };
		D26887E1571B4BF8A9DE0A2B /* gamma */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = gamma; refType = 0; sourceTree = BUILT_PRODUCTS_DIR; };
		D3C4C54F2629417FBA0A5F4B /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/modes.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = modes.c; path = glfw/tests/modes.c; sourceTree = SOURCE_ROOT; };
		D4D23FCABD5C4763B3E82052 /* defaults */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = defaults; refType = 0; sourceTree = BUILT_PRODUCTS_DIR; };
		D772E11E26004FA8B8EDAF0B /* fsaa */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = fsaa; refType = 0; sourceTree = BUILT_PRODUCTS_DIR; };
		D90FDF3B93934456AA89EDFC /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/cocoa_init.m */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.objc; fileEncoding = 4; name = cocoa_init.m; path = glfw/src/cocoa_init.m; sourceTree = SOURCE_ROOT; };
		DD6E4F9C3EAA4DDB9B4F4B23 /* TriangleOrtho */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = TriangleOrtho; refType = 0; sourceTree = BUILT_PRODUCTS_DIR; };
		DDB1503CED10484C97DDA196 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/cocoa_monitor.m */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.objc; fileEncoding = 4; name = cocoa_monitor.m; path = glfw/src/cocoa_monitor.m; sourceTree = SOURCE_ROOT; };
		DF4B8376236540F9A61340C0 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/getopt.h */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.h; fileEncoding = 4; name = getopt.h; path = glfw/deps/getopt.h; sourceTree = SOURCE_ROOT; };
		DF8BFA9B2A25498F89F40C97 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/Cube.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = Cube.cpp; path = examples/Cube.cpp; sourceTree = SOURCE_ROOT; };
		E01214FB5A8D498193F4F7D8 /* TextureLoader */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = TextureLoader; refType = 0; sourceTree = BUILT_PRODUCTS_DIR; };
		E03482DD07644114BE7DA5FA /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/cocoa_time.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = cocoa_time.c; path = glfw/src/cocoa_time.c; sourceTree = SOURCE_ROOT; };
		E2298AB211634EB880976746 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/glfw_config.h */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.h; fileEncoding = 4; name = glfw_config.h; path = xcode/glfw/src/glfw_config.h; sourceTree = SOURCE_ROOT; };
		E5816FAFB9F24B6C8838A4F0 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = glfw/tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		E6551A185CAB4526A74D21AD /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/Extensions.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = Extensions.cpp; path = examples/Extensions.cpp; sourceTree = SOURCE_ROOT; };
		E8B40B8DB73B4A06B9F9249C /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		E95AD1987D1D49029308B11B /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		EA63C0A3E35048A0A1F2AF3E /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/cocoa_platform.h */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.h; fileEncoding = 4; name = cocoa_platform.h; path = glfw/src/cocoa_platform.h; sourceTree = SOURCE_ROOT; };
		EEB422FF0CDA46E0AB83E10E /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/getopt.h */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.h; fileEncoding = 4; name = getopt.h; path = glfw/deps/getopt.h; sourceTree = SOURCE_ROOT; };
		EEB4A41E42EC45B1962F5B50 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/getopt.h */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.h; fileEncoding = 4; name = getopt.h; path = glfw/deps/getopt.h; sourceTree = SOURCE_ROOT; };
		EF8E281B94004D379BB16EA0 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/getopt.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = getopt.c; path = glfw/deps/getopt.c; sourceTree = SOURCE_ROOT; };
		F056F7FCCA5E478692C2A59D /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/gamma.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = gamma.c; path = glfw/tests/gamma.c; sourceTree = SOURCE_ROOT; };
		F0758368BE494984AA54A130 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests/CMakeFiles/title.dir/Info.plist */ = {isa = PBXFileReference; explicitFileType = sourcecode.text.plist; fileEncoding = 4; name = Info.plist; path = xcode/glfw/tests/CMakeFiles/title.dir/Info.plist; sourceTree = SOURCE_ROOT; };
		F87B39B680EC4678A905F6B0 /* Immediate */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = Immediate; refType = 0; sourceTree = BUILT_PRODUCTS_DIR; };
		FADD6A5C023246FA93C3CD99 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/getopt.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = getopt.c; path = glfw/deps/getopt.c; sourceTree = SOURCE_ROOT; };
		FB78ED87CB0647F584D5A6F5 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		FD07A8E59B43467E985F9F72 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/defaults.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = defaults.c; path = glfw/tests/defaults.c; sourceTree = SOURCE_ROOT; };
		FD3BE19C3AF24FC29BE6210C /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/TriangleOrtho.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = TriangleOrtho.cpp; path = examples/TriangleOrtho.cpp; sourceTree = SOURCE_ROOT; };
		FFD347C4AFE4491E86A6FCD4 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/tinycthread.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = tinycthread.c; path = glfw/deps/tinycthread.c; sourceTree = SOURCE_ROOT; };
/* End PBXFileReference section */

/* Begin PBXGroup section */
		0460AA1B597145F096D5A1EB /* GLFWApp */ = {
			isa = PBXGroup;
			children = (
				66E560F4E9C149CD9742C7AA /* Source Files */,
				6FDC64B827984C0181B960EA /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */,
			);
			name = GLFWApp;
			sourceTree = "<group>";
		};
		09BE80186567490F8E84B38D /* Version */ = {
			isa = PBXGroup;
			children = (
				D115D1BFB2D94F45A280A5EF /* Source Files */,
				0E9B962506934CB3A42ABCE9 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */,
			);
			name = Version;
			sourceTree = "<group>";
		};
		09F3E5452F024CE9937897B5 /* TextureLoader */ = {
			isa = PBXGroup;
			children = (
				1C0824964D4C442F88412E39 /* Source Files */,
				B0A8B46D5E2244908D534392 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */,
			);
			name = TextureLoader;
			sourceTree = "<group>";
		};
		0A3F30B0ADEE48389973444A /* glfw */ = {
			isa = PBXGroup;
			children = (
				38CA3BC546554A16B27A9637 /* Source Files */,
				3815A4CE39EB4D5C91204183 /* Header Files */,
				C35CEC53CB1C4F239E3AB7E6 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/CMakeLists.txt */,
			);
			name = glfw;
			sourceTree = "<group>";
		};
		0AC28CA4B7244557BDD44725 /* ImmediateTriangles */ = {
			isa = PBXGroup;
			children = (
				46F221A263D54B99A2915142 /* Source Files */,
				42DD914DA8AE4D26B22675A9 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */,
			);
			name = ImmediateTriangles;
			sourceTree = "<group>";
		};
		0CF63AD426BA49519D4E986D /* gamma */ = {
			isa = PBXGroup;
			children = (
				BFEFE6EFE2684D6485C88609 /* Source Files */,
				7802E8EED6CA4E90AF8095F9 /* Header Files */,
				03264C64EA274CAB8657A7F2 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/CMakeLists.txt */,
			);
			name = gamma;
			sourceTree = "<group>";
		};
		0F0CBCCF91304D21932C8BD8 /* Header Files */ = {
			isa = PBXGroup;
			children = (
				83DFE2C3DAC6408E9F280DE0 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/getopt.h */,
			);
			name = "Header Files";
			sourceTree = "<group>";
		};
		12DA3120FA8044B293E1724C /* Source Files */ = {
			isa = PBXGroup;
			children = (
				FD3BE19C3AF24FC29BE6210C /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/TriangleOrtho.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		173681A5904743179E5FAF6C /* clipboard */ = {
			isa = PBXGroup;
			children = (
				E549E933D40649219AED33E8 /* Source Files */,
				D425819D4DAD48DDBB6737F1 /* Header Files */,
				53A644CB3919417CBA38CABC /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/CMakeLists.txt */,
			);
			name = clipboard;
			sourceTree = "<group>";
		};
		17D5571D3DE040C483021E13 /* TriangleBuffer */ = {
			isa = PBXGroup;
			children = (
				19734DA48C314EEAB6C21127 /* Source Files */,
				AD816F7F6CEC43289C6D635D /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */,
			);
			name = TriangleBuffer;
			sourceTree = "<group>";
		};
		18E040151C7345B3B250DE1A /* Mouse */ = {
			isa = PBXGroup;
			children = (
				A46AA7A4C050405B992DE729 /* Source Files */,
				1B032243012C40A8BEAAB87E /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */,
			);
			name = Mouse;
			sourceTree = "<group>";
		};
		19734DA48C314EEAB6C21127 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				1062324AC73B4347B4F41111 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/TriangleBuffer.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		1C0824964D4C442F88412E39 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				0033636051544F3C95055E55 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/TextureLoader.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		1E601BA31390476CBBEC3542 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				0A12F201A4994309B56D79A3 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/peter.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		1FC6DDB6E1E545EC8FB37746 /* LightingAndTexture */ = {
			isa = PBXGroup;
			children = (
				91FA217E4271459AA868C143 /* Source Files */,
				2DC252E4832D4ED189383FAC /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */,
			);
			name = LightingAndTexture;
			sourceTree = "<group>";
		};
		22EFB273E01B455A952EF007 /* Resources */ = {
			isa = PBXGroup;
			children = (
				ABB93B996DED46AFB462DD49 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests/CMakeFiles/sharing.dir/Info.plist */,
			);
			name = Resources;
			sourceTree = "<group>";
		};
		27B54914CC9E4135901A7A07 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				30F67E5E7CD5499EAA75E3EF /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/DynamicMesh.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		27D5B94DB1B542458AC315AD /* accuracy */ = {
			isa = PBXGroup;
			children = (
				F76CCE98F2E94D1E91DF6B12 /* Source Files */,
				C4EEE84ECB9142C899784CAC /* Resources */,
				0B2318A2E8544DFE9F5348CC /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/CMakeLists.txt */,
			);
			name = accuracy;
			sourceTree = "<group>";
		};
		2813F075A20148BBBEB8DBCB /* Source Files */ = {
			isa = PBXGroup;
			children = (
				03F89BE923AC4D6B8E7B135A /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/getopt.c */,
				AA1F30608F4B4CF3A32F1B27 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/events.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		2E32E84B0C604672BE1F43BE /* peter */ = {
			isa = PBXGroup;
			children = (
				1E601BA31390476CBBEC3542 /* Source Files */,
				721103F44ADD4E65950521C2 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/CMakeLists.txt */,
			);
			name = peter;
			sourceTree = "<group>";
		};
		3232D7E2C2694F4683983A94 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				B06425755FFE4ECAA5B5C4E3 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/Immediate.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		353CBDB0522B4FEAB1533203 /* Header Files */ = {
			isa = PBXGroup;
			children = (
				75E918B2855045908CC16AD7 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/tinycthread.h */,
			);
			name = "Header Files";
			sourceTree = "<group>";
		};
		3815A4CE39EB4D5C91204183 /* Header Files */ = {
			isa = PBXGroup;
			children = (
				BFFB86000CD4440DBB5D10BA /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include/GLFW/glfw3.h */,
				91C879491E3C4AD9BC7B2846 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include/GLFW/glfw3native.h */,
				EA63C0A3E35048A0A1F2AF3E /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/cocoa_platform.h */,
				8CFB98E7DD4947FD90208EFF /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/internal.h */,
				9C3B000A044148E397C7FB59 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/nsgl_platform.h */,
				E2298AB211634EB880976746 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/glfw_config.h */,
			);
			name = "Header Files";
			sourceTree = "<group>";
		};
		381D8946924643E7A8CB2B27 /* ModelView */ = {
			isa = PBXGroup;
			children = (
				D75B01B5D71A4B6A869E1614 /* Source Files */,
				CCA27134AF8D46C4A8C21EF4 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */,
			);
			name = ModelView;
			sourceTree = "<group>";
		};
		38CA3BC546554A16B27A9637 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				4BEC18CE1C0B483F90BED1B7 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/clipboard.c */,
				C73211FDC4DC42CF93EC2E1F /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/cocoa_clipboard.m */,
				18DD15F90D61469D96DD7EED /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/cocoa_gamma.c */,
				D90FDF3B93934456AA89EDFC /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/cocoa_init.m */,
				8F84A165C6F74294AA6A0AA0 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/cocoa_joystick.m */,
				DDB1503CED10484C97DDA196 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/cocoa_monitor.m */,
				E03482DD07644114BE7DA5FA /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/cocoa_time.c */,
				BB83553821E749DE97584875 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/cocoa_window.m */,
				AC373B018BC24B54BC0A04F4 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/context.c */,
				A41A712AAE474849BC820474 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/gamma.c */,
				106AE81F56E44B9BA83136BD /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/init.c */,
				55E237406E2B410F8BEC94B9 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/input.c */,
				9A6640E1CEA64CEDBFF3C945 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/joystick.c */,
				013863A7303743CB8F900523 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/monitor.c */,
				8CB8C917EF0748269B27FE75 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/nsgl_context.m */,
				48D1D9ADE21D45EFB3CDA2EF /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/time.c */,
				84A205F9FFCE49AE914B531F /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/window.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		42A8FB5FAB89447F804A605B /* tearing */ = {
			isa = PBXGroup;
			children = (
				D0DCAC2EE8424BDF99546BA8 /* Source Files */,
				E73F1B5A7A2045F4A3A0B11A /* Resources */,
				841C3F473D774CF88D8222C0 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/CMakeLists.txt */,
			);
			name = tearing;
			sourceTree = "<group>";
		};
		43250F0918C04FA8B9A73032 /* Sources */ = {
			isa = PBXGroup;
			children = (
				4E6D800C63184A02A938826B /* ZERO_CHECK */,
				FF3165C6AD4B4CE6AE8AFE2B /* ALL_BUILD */,
				09F3E5452F024CE9937897B5 /* TextureLoader */,
				888ADED6415F466CBE9450A2 /* Texture */,
				18E040151C7345B3B250DE1A /* Mouse */,
				381D8946924643E7A8CB2B27 /* ModelView */,
				17D5571D3DE040C483021E13 /* TriangleBuffer */,
				9B45F109FB85436BBF1F3F0D /* Model */,
				B7D0CD1DFA4545488A78651B /* TriangleOrtho */,
				0460AA1B597145F096D5A1EB /* GLFWApp */,
				D1E7D2AA896C4BA2BDD34C3C /* Immediate */,
				1FC6DDB6E1E545EC8FB37746 /* LightingAndTexture */,
				FC39EAD676C4478FB0E7A381 /* TriangleColorBuffer */,
				EB6C7258CE4A43F08000013E /* Cube */,
				9A601BE6563E41ACA8123F7B /* Lighting */,
				09BE80186567490F8E84B38D /* Version */,
				A3E9AFD4B61941ADBF330E8F /* Keyboard */,
				0AC28CA4B7244557BDD44725 /* ImmediateTriangles */,
				A9BAE4F4EB6145F5939F3442 /* Extensions */,
				95D7C95BE69A4399A801A14C /* GLFWwindow */,
				8C4165DF6A604A459B9D875F /* DynamicMesh */,
				DA45A36A24D94D13AC2BF0FB /* uninstall */,
				0A3F30B0ADEE48389973444A /* glfw */,
				5C73F2FF12EB418BB033319A /* windows */,
				47A02F3A034A4EBF91ED20B0 /* title */,
				A3AA8FB542D14E6B999BC3E4 /* threads */,
				42A8FB5FAB89447F804A605B /* tearing */,
				9F8606748AAB4C71AD8846E9 /* sharing */,
				2E32E84B0C604672BE1F43BE /* peter */,
				D65CF9C171F14C61A3636C64 /* glfwinfo */,
				61F99ABDE6BA46F4A7266B67 /* reopen */,
				173681A5904743179E5FAF6C /* clipboard */,
				7C97ACB30CB74A7B889BE989 /* modes */,
				B2B190BA466E43B9A3F50A47 /* joysticks */,
				CFEDB6DEB35148A29E942653 /* events */,
				B970F9D1470A4BC59D4397BC /* iconify */,
				27D5B94DB1B542458AC315AD /* accuracy */,
				0CF63AD426BA49519D4E986D /* gamma */,
				7B49B883164B4FBE87E84A35 /* fsaa */,
				D9DCC34B0B2C4EB995C719DE /* defaults */,
			);
			name = Sources;
			sourceTree = "<group>";
		};
		46F221A263D54B99A2915142 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				75AACC6BE40E477B96E6FB0E /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/ImmediateTriangles.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		47A02F3A034A4EBF91ED20B0 /* title */ = {
			isa = PBXGroup;
			children = (
				7C7FF611542C4CF4974205FB /* Source Files */,
				756708E3D8444DA6A8C5DACC /* Resources */,
				213FE68F0F3D43D7A885F087 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/CMakeLists.txt */,
			);
			name = title;
			sourceTree = "<group>";
		};
		4A4B876B7E674288BE131320 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		4BF0C1D206BD4A95B8AD299F /* Source Files */ = {
			isa = PBXGroup;
			children = (
				A26DA914CEBC4DD98EE365AE /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/getopt.c */,
				1D7C9CDA339540D09EFEF695 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/glfwinfo.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		4CE2BCC9C340403EAD5BFC4F /* Source Files */ = {
			isa = PBXGroup;
			children = (
				AFFC52A1D9C84391BE1405EF /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/getopt.c */,
				9911E58456754A529DB1D4CF /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/iconify.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		4E6D800C63184A02A938826B /* ZERO_CHECK */ = {
			isa = PBXGroup;
			children = (
				8013093D456240ACB3F31E23 /* CMake Rules */,
				C1500B56515D4F00BB5D8CB2 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */,
			);
			name = ZERO_CHECK;
			sourceTree = "<group>";
		};
		55E437B8C8754EE4A86297D1 /* Header Files */ = {
			isa = PBXGroup;
			children = (
				EEB422FF0CDA46E0AB83E10E /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/getopt.h */,
			);
			name = "Header Files";
			sourceTree = "<group>";
		};
		58AB49AC137847F4A532592A /* Products */ = {
			isa = PBXGroup;
			children = (
				764940F7C24542DFBD2A4C73 /* Cube */,
				7788C3B262904C829459E955 /* DynamicMesh */,
				CD5D871B3F2F4A65BDD5A31A /* Extensions */,
				8C4AA5158816412192D549DE /* GLFWApp */,
				0ED66F47250F44FE8CE72AA9 /* GLFWwindow */,
				F87B39B680EC4678A905F6B0 /* Immediate */,
				4DC451E0D8904E519AF465DE /* ImmediateTriangles */,
				5C491441D37540E18F08F3ED /* Keyboard */,
				C47D57A0AAA2411DAD9F474F /* Lighting */,
				CA1166E19DD64F898AD87020 /* LightingAndTexture */,
				3567D43CD64548ABA72AB714 /* Model */,
				29895EA332CF45F7BBE24CE5 /* ModelView */,
				A3B59E3A47D14BFDB1788007 /* Mouse */,
				C02C912AAAA04DA0A78C6129 /* Texture */,
				E01214FB5A8D498193F4F7D8 /* TextureLoader */,
				5698AB5A8000466BB4B27646 /* TriangleBuffer */,
				858BFC3349E6461F9860B837 /* TriangleColorBuffer */,
				DD6E4F9C3EAA4DDB9B4F4B23 /* TriangleOrtho */,
				9906937A07E74F3F934247D4 /* Version */,
				B18B2C73BDE34008A161DC35 /* glfw */,
				1C199621ADB04839829EAF78 /* accuracy */,
				238888B85C24492789AE8A8B /* clipboard */,
				D4D23FCABD5C4763B3E82052 /* defaults */,
				5AB1E84BCCED42C78A744C84 /* events */,
				D772E11E26004FA8B8EDAF0B /* fsaa */,
				D26887E1571B4BF8A9DE0A2B /* gamma */,
				A875D1B93B4E4801B85A96A1 /* glfwinfo */,
				A4FAF5F7992B46669422ABCA /* iconify */,
				B0B31EB41B014F089B096547 /* joysticks */,
				C0D3798B19AC4727A2FB4C65 /* modes */,
				BD040387FB2241279F2F727F /* peter */,
				9B9B4AE375EB4ED295FFFE60 /* reopen */,
				08BD4584CB5C47C1A1D2D981 /* sharing */,
				56AB15B900054933B542CD64 /* tearing */,
				B6925A10CD6E4A3E9248E371 /* threads */,
				D266163AD5264BCF9CD1C948 /* title */,
				2C0E7D200DBF437A81E29F0E /* windows */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		5C73F2FF12EB418BB033319A /* windows */ = {
			isa = PBXGroup;
			children = (
				7969A5967A664A30BC17CE6B /* Source Files */,
				7E7B1636DD854E7C95045468 /* Resources */,
				935DACEAEFA547908DF401C0 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/CMakeLists.txt */,
			);
			name = windows;
			sourceTree = "<group>";
		};
		61F99ABDE6BA46F4A7266B67 /* reopen */ = {
			isa = PBXGroup;
			children = (
				A5254D0FE38348F386E234F6 /* Source Files */,
				22C8A2C50C2B4C3193E3820C /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/CMakeLists.txt */,
			);
			name = reopen;
			sourceTree = "<group>";
		};
		66E560F4E9C149CD9742C7AA /* Source Files */ = {
			isa = PBXGroup;
			children = (
				56F0320FA72443FE89BC13A7 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/GLFWApp.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		6F1713ECB6AD4E248357E8B4 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				FD07A8E59B43467E985F9F72 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/defaults.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		702967B4463B47DFAC604ADE /* Resources */ = {
			isa = PBXGroup;
			children = (
				5E4E7F52DA79483882CD7FCB /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests/CMakeFiles/threads.dir/Info.plist */,
			);
			name = Resources;
			sourceTree = "<group>";
		};
		752E68F931814E71B80CA691 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		756708E3D8444DA6A8C5DACC /* Resources */ = {
			isa = PBXGroup;
			children = (
				F0758368BE494984AA54A130 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests/CMakeFiles/title.dir/Info.plist */,
			);
			name = Resources;
			sourceTree = "<group>";
		};
		7802E8EED6CA4E90AF8095F9 /* Header Files */ = {
			isa = PBXGroup;
			children = (
				DF4B8376236540F9A61340C0 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/getopt.h */,
			);
			name = "Header Files";
			sourceTree = "<group>";
		};
		7969A5967A664A30BC17CE6B /* Source Files */ = {
			isa = PBXGroup;
			children = (
				77696700027D4589B70529E4 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/windows.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		7B49B883164B4FBE87E84A35 /* fsaa */ = {
			isa = PBXGroup;
			children = (
				FB015C36C16E46C992A38C2B /* Source Files */,
				9EB222BD0AAA48D49FFA8830 /* Header Files */,
				6480C723D1B64B06B413106D /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/CMakeLists.txt */,
			);
			name = fsaa;
			sourceTree = "<group>";
		};
		7B4B4463BC6048ACBA527E00 /* Header Files */ = {
			isa = PBXGroup;
			children = (
				B22963FB18064BEA9D31354A /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/getopt.h */,
			);
			name = "Header Files";
			sourceTree = "<group>";
		};
		7C7FF611542C4CF4974205FB /* Source Files */ = {
			isa = PBXGroup;
			children = (
				19D177944FAA4BE38665913E /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/title.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		7C97ACB30CB74A7B889BE989 /* modes */ = {
			isa = PBXGroup;
			children = (
				BF99FAF8517C40ACB36C96C2 /* Source Files */,
				7B4B4463BC6048ACBA527E00 /* Header Files */,
				22D140A18418456A99FEFEEF /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/CMakeLists.txt */,
			);
			name = modes;
			sourceTree = "<group>";
		};
		7E7B1636DD854E7C95045468 /* Resources */ = {
			isa = PBXGroup;
			children = (
				7FD80AAE3F254EEA8FC4DAC0 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests/CMakeFiles/windows.dir/Info.plist */,
			);
			name = Resources;
			sourceTree = "<group>";
		};
		8013093D456240ACB3F31E23 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		803993448EF34A498E7A55AB /* Header Files */ = {
			isa = PBXGroup;
			children = (
				C2D3B4A22658488C98D44D04 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/getopt.h */,
			);
			name = "Header Files";
			sourceTree = "<group>";
		};
		888ADED6415F466CBE9450A2 /* Texture */ = {
			isa = PBXGroup;
			children = (
				9CFE29101F6C4030AE3A056B /* Source Files */,
				FB78ED87CB0647F584D5A6F5 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */,
			);
			name = Texture;
			sourceTree = "<group>";
		};
		8C4165DF6A604A459B9D875F /* DynamicMesh */ = {
			isa = PBXGroup;
			children = (
				27B54914CC9E4135901A7A07 /* Source Files */,
				BDBA350AFC704901979247EE /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */,
			);
			name = DynamicMesh;
			sourceTree = "<group>";
		};
		91FA217E4271459AA868C143 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				279121123D4147F7A163A85C /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/LightingAndTexture.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		9509BEB90631455B85461F15 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				E6551A185CAB4526A74D21AD /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/Extensions.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		95D7C95BE69A4399A801A14C /* GLFWwindow */ = {
			isa = PBXGroup;
			children = (
				9C21EB05890841949B4C419B /* Source Files */,
				5746967E418842E38C79165F /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */,
			);
			name = GLFWwindow;
			sourceTree = "<group>";
		};
		9A601BE6563E41ACA8123F7B /* Lighting */ = {
			isa = PBXGroup;
			children = (
				DC37F9090D11496CA40B67B9 /* Source Files */,
				6BF72962D5534DA6A58DBFE6 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */,
			);
			name = Lighting;
			sourceTree = "<group>";
		};
		9B45F109FB85436BBF1F3F0D /* Model */ = {
			isa = PBXGroup;
			children = (
				CDD06B8D0B094E70B02E4661 /* Source Files */,
				567A62C11D194AD1A1A704F8 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */,
			);
			name = Model;
			sourceTree = "<group>";
		};
		9C21EB05890841949B4C419B /* Source Files */ = {
			isa = PBXGroup;
			children = (
				1291F7925FDB4085B2BB7ECC /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/GLFWwindow.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		9CFE29101F6C4030AE3A056B /* Source Files */ = {
			isa = PBXGroup;
			children = (
				4E12036B9C7541579BB0F2AB /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/Texture.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		9EB222BD0AAA48D49FFA8830 /* Header Files */ = {
			isa = PBXGroup;
			children = (
				4B0DC62F869B4195BB2F8F20 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/getopt.h */,
			);
			name = "Header Files";
			sourceTree = "<group>";
		};
		9EDA9FB1517942F4A7378663 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				FFD347C4AFE4491E86A6FCD4 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/tinycthread.c */,
				87E40BF334CB4C92A836C8A5 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/threads.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		9F8606748AAB4C71AD8846E9 /* sharing */ = {
			isa = PBXGroup;
			children = (
				F501E11EE09048B0B36758FB /* Source Files */,
				22EFB273E01B455A952EF007 /* Resources */,
				E5816FAFB9F24B6C8838A4F0 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/CMakeLists.txt */,
			);
			name = sharing;
			sourceTree = "<group>";
		};
		A3AA8FB542D14E6B999BC3E4 /* threads */ = {
			isa = PBXGroup;
			children = (
				9EDA9FB1517942F4A7378663 /* Source Files */,
				353CBDB0522B4FEAB1533203 /* Header Files */,
				702967B4463B47DFAC604ADE /* Resources */,
				098CDDDD9C0B43CDAFB04917 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/CMakeLists.txt */,
			);
			name = threads;
			sourceTree = "<group>";
		};
		A3E9AFD4B61941ADBF330E8F /* Keyboard */ = {
			isa = PBXGroup;
			children = (
				BF04A35A01D449EAA946034C /* Source Files */,
				BCFD4755F2FB45438CE05CC0 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */,
			);
			name = Keyboard;
			sourceTree = "<group>";
		};
		A46AA7A4C050405B992DE729 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				7DCC9880582A4B13A6E5083B /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/Mouse.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		A5254D0FE38348F386E234F6 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				0F4CDEEB03DB4F79A4950C37 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/reopen.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		A9BAE4F4EB6145F5939F3442 /* Extensions */ = {
			isa = PBXGroup;
			children = (
				9509BEB90631455B85461F15 /* Source Files */,
				0A416697654F473D8550DC0F /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */,
			);
			name = Extensions;
			sourceTree = "<group>";
		};
		AA60A2CDF7424048BAF98F6E /* Source Files */ = {
			isa = PBXGroup;
			children = (
				62C6B9CF4FB6411097C45AE7 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/TriangleColorBuffer.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		B2B190BA466E43B9A3F50A47 /* joysticks */ = {
			isa = PBXGroup;
			children = (
				BCDFC9FF824344F99163A8E9 /* Source Files */,
				6A5ACCD166F44FC4A19C4739 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/CMakeLists.txt */,
			);
			name = joysticks;
			sourceTree = "<group>";
		};
		B6ADE69F2B014D3CA79BD44D = {
			isa = PBXGroup;
			children = (
				43250F0918C04FA8B9A73032 /* Sources */,
				E977091D0B4A43A0B4367420 /* Resources */,
				58AB49AC137847F4A532592A /* Products */,
			);
			sourceTree = "<group>";
		};
		B7D0CD1DFA4545488A78651B /* TriangleOrtho */ = {
			isa = PBXGroup;
			children = (
				12DA3120FA8044B293E1724C /* Source Files */,
				7BED6C17256A4459B84C826F /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */,
			);
			name = TriangleOrtho;
			sourceTree = "<group>";
		};
		B7EA5F0F11DF4E2A9060ADA1 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				DF8BFA9B2A25498F89F40C97 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/Cube.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		B970F9D1470A4BC59D4397BC /* iconify */ = {
			isa = PBXGroup;
			children = (
				4CE2BCC9C340403EAD5BFC4F /* Source Files */,
				803993448EF34A498E7A55AB /* Header Files */,
				36AA372F78264FA694889574 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/CMakeLists.txt */,
			);
			name = iconify;
			sourceTree = "<group>";
		};
		BCDFC9FF824344F99163A8E9 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				377B80A6AAB7412589184832 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/joysticks.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		BF04A35A01D449EAA946034C /* Source Files */ = {
			isa = PBXGroup;
			children = (
				1BF412177B0E492CBC6B271F /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/Keyboard.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		BF99FAF8517C40ACB36C96C2 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				EF8E281B94004D379BB16EA0 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/getopt.c */,
				D3C4C54F2629417FBA0A5F4B /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/modes.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		BFEFE6EFE2684D6485C88609 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				0AB82EB67BD64DEBA0D0304A /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/getopt.c */,
				F056F7FCCA5E478692C2A59D /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/gamma.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		C4EEE84ECB9142C899784CAC /* Resources */ = {
			isa = PBXGroup;
			children = (
				5EFB34CD1E9B4B0781666F7B /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests/CMakeFiles/accuracy.dir/Info.plist */,
			);
			name = Resources;
			sourceTree = "<group>";
		};
		CDD06B8D0B094E70B02E4661 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				82F25872B3B84A5B9D65C7E1 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/Model.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		CFEDB6DEB35148A29E942653 /* events */ = {
			isa = PBXGroup;
			children = (
				2813F075A20148BBBEB8DBCB /* Source Files */,
				0F0CBCCF91304D21932C8BD8 /* Header Files */,
				46F020B1F911499D85891539 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/CMakeLists.txt */,
			);
			name = events;
			sourceTree = "<group>";
		};
		D0DCAC2EE8424BDF99546BA8 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				7E68B45B95AB4647B80F1656 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/tearing.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		D115D1BFB2D94F45A280A5EF /* Source Files */ = {
			isa = PBXGroup;
			children = (
				31C6BE884305488191CE0383 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/Version.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		D1E7D2AA896C4BA2BDD34C3C /* Immediate */ = {
			isa = PBXGroup;
			children = (
				3232D7E2C2694F4683983A94 /* Source Files */,
				E8B40B8DB73B4A06B9F9249C /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */,
			);
			name = Immediate;
			sourceTree = "<group>";
		};
		D425819D4DAD48DDBB6737F1 /* Header Files */ = {
			isa = PBXGroup;
			children = (
				EEB4A41E42EC45B1962F5B50 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/getopt.h */,
			);
			name = "Header Files";
			sourceTree = "<group>";
		};
		D65CF9C171F14C61A3636C64 /* glfwinfo */ = {
			isa = PBXGroup;
			children = (
				4BF0C1D206BD4A95B8AD299F /* Source Files */,
				55E437B8C8754EE4A86297D1 /* Header Files */,
				973656E910B14B2C846186A9 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/CMakeLists.txt */,
			);
			name = glfwinfo;
			sourceTree = "<group>";
		};
		D75B01B5D71A4B6A869E1614 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				726656B87BA74A3C86AB5D77 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/ModelView.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		D9DCC34B0B2C4EB995C719DE /* defaults */ = {
			isa = PBXGroup;
			children = (
				6F1713ECB6AD4E248357E8B4 /* Source Files */,
				6ACCE65FC37542F381AAFA76 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/CMakeLists.txt */,
			);
			name = defaults;
			sourceTree = "<group>";
		};
		DA45A36A24D94D13AC2BF0FB /* uninstall */ = {
			isa = PBXGroup;
			children = (
				4A4B876B7E674288BE131320 /* CMake Rules */,
				D179AB3E107948FE8A68DD43 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/CMakeLists.txt */,
			);
			name = uninstall;
			sourceTree = "<group>";
		};
		DC37F9090D11496CA40B67B9 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				0490D471ABAE431C92F46EBB /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/Lighting.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		E549E933D40649219AED33E8 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				FADD6A5C023246FA93C3CD99 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/getopt.c */,
				C0E8DB8DD6BD423097A05320 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/clipboard.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		E73F1B5A7A2045F4A3A0B11A /* Resources */ = {
			isa = PBXGroup;
			children = (
				B1C83AE56CA24D4893223A72 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests/CMakeFiles/tearing.dir/Info.plist */,
			);
			name = Resources;
			sourceTree = "<group>";
		};
		E977091D0B4A43A0B4367420 /* Resources */ = {
			isa = PBXGroup;
			children = (
			);
			name = Resources;
			sourceTree = "<group>";
		};
		EB6C7258CE4A43F08000013E /* Cube */ = {
			isa = PBXGroup;
			children = (
				B7EA5F0F11DF4E2A9060ADA1 /* Source Files */,
				E95AD1987D1D49029308B11B /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */,
			);
			name = Cube;
			sourceTree = "<group>";
		};
		F501E11EE09048B0B36758FB /* Source Files */ = {
			isa = PBXGroup;
			children = (
				AE5FAD5143D540BD89214A97 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/sharing.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		F76CCE98F2E94D1E91DF6B12 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				058BDC19F2644CAD8CD8CD5A /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/accuracy.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		FB015C36C16E46C992A38C2B /* Source Files */ = {
			isa = PBXGroup;
			children = (
				24CB2B5BA43941C18CE14D82 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/getopt.c */,
				04846186790A4AA093B8E4BE /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/fsaa.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		FC39EAD676C4478FB0E7A381 /* TriangleColorBuffer */ = {
			isa = PBXGroup;
			children = (
				AA60A2CDF7424048BAF98F6E /* Source Files */,
				291398BF7C3D4A42896A6DDC /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */,
			);
			name = TriangleColorBuffer;
			sourceTree = "<group>";
		};
		FF3165C6AD4B4CE6AE8AFE2B /* ALL_BUILD */ = {
			isa = PBXGroup;
			children = (
				752E68F931814E71B80CA691 /* CMake Rules */,
				90A04D88BCA24B3D9777F43B /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/CMakeLists.txt */,
			);
			name = ALL_BUILD;
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		0B147D42A3F24CBEA2A2AEB8 /* Mouse */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = B73695BCE1AB40BCB0C7EC5C /* Build configuration list for PBXNativeTarget "Mouse" */;
			buildPhases = (
				B1484233ABE244979DB2BDD6 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				2A1FFDD968EC4A19924591D0 /* PBXTargetDependency */,
				22998F5502AC46C99A387CE0 /* PBXTargetDependency */,
			);
			name = Mouse;
			productName = Mouse;
			productReference = A3B59E3A47D14BFDB1788007 /* Mouse */;
			productType = "com.apple.product-type.tool";
		};
		11FBAE78E67D4CB899DD161C /* Texture */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 5FA7F1E1C53D4345AAD93778 /* Build configuration list for PBXNativeTarget "Texture" */;
			buildPhases = (
				4D932998A93B422080470163 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				763BCF2948F04130BA676E42 /* PBXTargetDependency */,
				01A4C6FC01384002B29E83F7 /* PBXTargetDependency */,
			);
			name = Texture;
			productName = Texture;
			productReference = C02C912AAAA04DA0A78C6129 /* Texture */;
			productType = "com.apple.product-type.tool";
		};
		15C7EB72C3E94A36879B0FB6 /* ModelView */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = AADCC35CB12D43F2924B11FA /* Build configuration list for PBXNativeTarget "ModelView" */;
			buildPhases = (
				029275659F0542F18008DBF8 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				918AEA37ADD046D8A32A09DA /* PBXTargetDependency */,
				3ACA2402D0FE45ADAAC930F8 /* PBXTargetDependency */,
			);
			name = ModelView;
			productName = ModelView;
			productReference = 29895EA332CF45F7BBE24CE5 /* ModelView */;
			productType = "com.apple.product-type.tool";
		};
		1AA25737399D4122881D3626 /* title */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 25436F1952764ECB9BED0936 /* Build configuration list for PBXNativeTarget "title" */;
			buildPhases = (
				538464854CB9456B997DAA88 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				1806D30B9F9F454294E18C08 /* PBXTargetDependency */,
				A5B5BB70B1114CA28C86B10F /* PBXTargetDependency */,
			);
			name = title;
			productName = title;
			productReference = D266163AD5264BCF9CD1C948 /* title */;
			productType = "com.apple.product-type.application";
		};
		36C64F7CCFF34B3EA79D7531 /* joysticks */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = BDFB33A11BE84B9A8EA6646E /* Build configuration list for PBXNativeTarget "joysticks" */;
			buildPhases = (
				60E02AC22D7441D4A8C0A656 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				1E584B93F6A147CB82EC26FE /* PBXTargetDependency */,
				4AB9500956E2471ABB801AC0 /* PBXTargetDependency */,
			);
			name = joysticks;
			productName = joysticks;
			productReference = B0B31EB41B014F089B096547 /* joysticks */;
			productType = "com.apple.product-type.tool";
		};
		3BB51AEE4C9242C39899D3C0 /* Version */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = D482CAB5FA9748DD811F8119 /* Build configuration list for PBXNativeTarget "Version" */;
			buildPhases = (
				5ECCCCB4E7714A969E0D24CC /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				B2F9A418160A430481B53D07 /* PBXTargetDependency */,
				5B44F96D4328486E8D4169E8 /* PBXTargetDependency */,
			);
			name = Version;
			productName = Version;
			productReference = 9906937A07E74F3F934247D4 /* Version */;
			productType = "com.apple.product-type.tool";
		};
		402683BDEBBA404E949853DD /* fsaa */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 3CC3C7EA302245368F11D31D /* Build configuration list for PBXNativeTarget "fsaa" */;
			buildPhases = (
				2CC8A3AD80AA4B9EB2C63133 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				E4A5CB4DC7AE4E41A777E989 /* PBXTargetDependency */,
				4257008E3D414918B6F3E5F0 /* PBXTargetDependency */,
			);
			name = fsaa;
			productName = fsaa;
			productReference = D772E11E26004FA8B8EDAF0B /* fsaa */;
			productType = "com.apple.product-type.tool";
		};
		48D14F9E891C4241BDC0284D /* TriangleBuffer */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 03CA83B549AE47879DD0916A /* Build configuration list for PBXNativeTarget "TriangleBuffer" */;
			buildPhases = (
				329E03B472474293B8817324 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				DD071D1334204B088528143D /* PBXTargetDependency */,
				A2555EB28E7245D9AE995583 /* PBXTargetDependency */,
			);
			name = TriangleBuffer;
			productName = TriangleBuffer;
			productReference = 5698AB5A8000466BB4B27646 /* TriangleBuffer */;
			productType = "com.apple.product-type.tool";
		};
		55B0EB4BC6AA4DDCA3D5ECE1 /* peter */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = AA30F59F431547C882D53086 /* Build configuration list for PBXNativeTarget "peter" */;
			buildPhases = (
				938A3BB8BA5641839DF96FC7 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				4DE9A8884B134987BB933CC4 /* PBXTargetDependency */,
				9654C9160A134933AF0D23F5 /* PBXTargetDependency */,
			);
			name = peter;
			productName = peter;
			productReference = BD040387FB2241279F2F727F /* peter */;
			productType = "com.apple.product-type.tool";
		};
		589858B3D9CF47DDBBE17F25 /* defaults */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 117A828C03E6480EB2E9AF28 /* Build configuration list for PBXNativeTarget "defaults" */;
			buildPhases = (
				F0DBF1B0948942F387EC0067 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				09F78CB607DA4A53903A1B9A /* PBXTargetDependency */,
				5A9F341E1A8E4D0D9934DF48 /* PBXTargetDependency */,
			);
			name = defaults;
			productName = defaults;
			productReference = D4D23FCABD5C4763B3E82052 /* defaults */;
			productType = "com.apple.product-type.tool";
		};
		5D032148F2D5403EABBAA95E /* DynamicMesh */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = D779646E16DB4B308697D135 /* Build configuration list for PBXNativeTarget "DynamicMesh" */;
			buildPhases = (
				41996658664F4B98B6E65FEB /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				6CD55F623A1F46FAA9BDABD2 /* PBXTargetDependency */,
				78E395DA98A4463BBAEDF301 /* PBXTargetDependency */,
			);
			name = DynamicMesh;
			productName = DynamicMesh;
			productReference = 7788C3B262904C829459E955 /* DynamicMesh */;
			productType = "com.apple.product-type.tool";
		};
		6776F94C10EA4DDCA85329A5 /* Keyboard */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = DA90626E5BF04A59AFD77BBA /* Build configuration list for PBXNativeTarget "Keyboard" */;
			buildPhases = (
				675AFB1FC9434D928171D452 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				6BF50FDAEAF346A9981C2B99 /* PBXTargetDependency */,
				C0A7F55A483E4F818A547DFE /* PBXTargetDependency */,
			);
			name = Keyboard;
			productName = Keyboard;
			productReference = 5C491441D37540E18F08F3ED /* Keyboard */;
			productType = "com.apple.product-type.tool";
		};
		6A050A6FDFF14C2FA6CC589A /* Lighting */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = D4CD6FC9AA5142BF9C093F9A /* Build configuration list for PBXNativeTarget "Lighting" */;
			buildPhases = (
				3D406283CE0A43628B2CAFF4 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				CD421AE0CADB4402BE46346D /* PBXTargetDependency */,
				DD73B592ECAE4A68BD840F4A /* PBXTargetDependency */,
			);
			name = Lighting;
			productName = Lighting;
			productReference = C47D57A0AAA2411DAD9F474F /* Lighting */;
			productType = "com.apple.product-type.tool";
		};
		6B9207DFB3DA4F51A7FF5C46 /* GLFWwindow */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = DA96176D1B6242159A07D3C9 /* Build configuration list for PBXNativeTarget "GLFWwindow" */;
			buildPhases = (
				AA0841787A774470954276F5 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				A6A24AA1D5DC4E599FD0C16F /* PBXTargetDependency */,
				BFC9CEA57183404BB781EAFF /* PBXTargetDependency */,
			);
			name = GLFWwindow;
			productName = GLFWwindow;
			productReference = 0ED66F47250F44FE8CE72AA9 /* GLFWwindow */;
			productType = "com.apple.product-type.tool";
		};
		6ED44D93C81540C5ABF4F21E /* sharing */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 16AA517B224A48E199C6A74F /* Build configuration list for PBXNativeTarget "sharing" */;
			buildPhases = (
				076238132B094D3CB8CB347C /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				3DB2DE38AF744926AF92E9FB /* PBXTargetDependency */,
				D659A614C6CE42DB82A53D26 /* PBXTargetDependency */,
			);
			name = sharing;
			productName = sharing;
			productReference = 08BD4584CB5C47C1A1D2D981 /* sharing */;
			productType = "com.apple.product-type.application";
		};
		776D7F9DB09B496ABA01513D /* windows */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 500ED9E282624B37A742FADA /* Build configuration list for PBXNativeTarget "windows" */;
			buildPhases = (
				8591A343512E44CF95C24025 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				0A3A3460E63A452888A2FC79 /* PBXTargetDependency */,
				05D01E1E30A9420498B59651 /* PBXTargetDependency */,
			);
			name = windows;
			productName = windows;
			productReference = 2C0E7D200DBF437A81E29F0E /* windows */;
			productType = "com.apple.product-type.application";
		};
		7CCA9764AF884A5BA0F567C2 /* clipboard */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = AB1CE974D6C646FA84909C60 /* Build configuration list for PBXNativeTarget "clipboard" */;
			buildPhases = (
				0DEFE1548B5E46E192995F9D /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				93C0D333BBCB4DB29409EB45 /* PBXTargetDependency */,
				AF9916C36F5E4509A917BB52 /* PBXTargetDependency */,
			);
			name = clipboard;
			productName = clipboard;
			productReference = 238888B85C24492789AE8A8B /* clipboard */;
			productType = "com.apple.product-type.tool";
		};
		897ED64C6CFB4B68BB62C02B /* TriangleColorBuffer */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 2017C85D67B24176BBCE3AA5 /* Build configuration list for PBXNativeTarget "TriangleColorBuffer" */;
			buildPhases = (
				527A67DB1A694933B5F37C7B /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				54B0457C4DA747B6BA590366 /* PBXTargetDependency */,
				8A06E9FEACF04FF4BC0FB09A /* PBXTargetDependency */,
			);
			name = TriangleColorBuffer;
			productName = TriangleColorBuffer;
			productReference = 858BFC3349E6461F9860B837 /* TriangleColorBuffer */;
			productType = "com.apple.product-type.tool";
		};
		8A0B984A8AE24D61976E96D9 /* accuracy */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = B197FA539931413A82079BF5 /* Build configuration list for PBXNativeTarget "accuracy" */;
			buildPhases = (
				0A4240200957426A961D1038 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				C98FAF1015CE4018ACB939A4 /* PBXTargetDependency */,
				294577E7739F4129B33DA6FB /* PBXTargetDependency */,
			);
			name = accuracy;
			productName = accuracy;
			productReference = 1C199621ADB04839829EAF78 /* accuracy */;
			productType = "com.apple.product-type.application";
		};
		8D8C5716D5B049C3B8283A0D /* iconify */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 5DF6069D9C974BF28AB323DC /* Build configuration list for PBXNativeTarget "iconify" */;
			buildPhases = (
				BFEA0AE8B79D4BCDB93A77DE /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				32F11232AB504C5A8260FE13 /* PBXTargetDependency */,
				5536031B3A554F1A819CE629 /* PBXTargetDependency */,
			);
			name = iconify;
			productName = iconify;
			productReference = A4FAF5F7992B46669422ABCA /* iconify */;
			productType = "com.apple.product-type.tool";
		};
		92C9D52D3445414F8511509E /* Extensions */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 7FE6EF3DBE4D42FFB520696E /* Build configuration list for PBXNativeTarget "Extensions" */;
			buildPhases = (
				25B21E3DF1C64BCCA7EA92C0 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				139F0C13F6AE4C3DB7E1FE85 /* PBXTargetDependency */,
				49624000095F4982BB863F6A /* PBXTargetDependency */,
			);
			name = Extensions;
			productName = Extensions;
			productReference = CD5D871B3F2F4A65BDD5A31A /* Extensions */;
			productType = "com.apple.product-type.tool";
		};
		A1E9731CC5B9466A916C82D5 /* LightingAndTexture */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = DAB23BCFC59D4C2E92657B7D /* Build configuration list for PBXNativeTarget "LightingAndTexture" */;
			buildPhases = (
				B2BCDA5EBB6249DD9D3528C1 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				23058D756B77450AAF2FAD30 /* PBXTargetDependency */,
				30A4441BA2D94FDFA122D2D1 /* PBXTargetDependency */,
			);
			name = LightingAndTexture;
			productName = LightingAndTexture;
			productReference = CA1166E19DD64F898AD87020 /* LightingAndTexture */;
			productType = "com.apple.product-type.tool";
		};
		A322ADC4785A499C9C2AEAFD /* glfwinfo */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = CC477BF82FA44F399B4102D3 /* Build configuration list for PBXNativeTarget "glfwinfo" */;
			buildPhases = (
				C893B868932446578FEFA59D /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				94FC0E51B5ED4CC7923BA71C /* PBXTargetDependency */,
				CF9AAEF07FDC462B9C22DA38 /* PBXTargetDependency */,
			);
			name = glfwinfo;
			productName = glfwinfo;
			productReference = A875D1B93B4E4801B85A96A1 /* glfwinfo */;
			productType = "com.apple.product-type.tool";
		};
		A641D9E0EE4741AFB160CDB6 /* threads */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = EBD4E15A64734363916ADC3A /* Build configuration list for PBXNativeTarget "threads" */;
			buildPhases = (
				936FF838DCE44C32B2DE15D5 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				F8F208201534450EB7BE8D91 /* PBXTargetDependency */,
				E46C074F7FFB4A87A22E176F /* PBXTargetDependency */,
			);
			name = threads;
			productName = threads;
			productReference = B6925A10CD6E4A3E9248E371 /* threads */;
			productType = "com.apple.product-type.application";
		};
		A812115358A44C188AA222D3 /* tearing */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 1DC4CC5312234DEC927B1ADB /* Build configuration list for PBXNativeTarget "tearing" */;
			buildPhases = (
				0C33A182DA7A494F9480679E /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				3CFA5574552B43058B5B6BD7 /* PBXTargetDependency */,
				E3FC29D6C31748469F0BBA5B /* PBXTargetDependency */,
			);
			name = tearing;
			productName = tearing;
			productReference = 56AB15B900054933B542CD64 /* tearing */;
			productType = "com.apple.product-type.application";
		};
		ABA061AFB00A40BDBADD9EEB /* GLFWApp */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 45042A367C5740D9BC773A0C /* Build configuration list for PBXNativeTarget "GLFWApp" */;
			buildPhases = (
				45B941B2803D44D8826D9918 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				78C3D57D9A5748CF960896FA /* PBXTargetDependency */,
				1B218E397C9C4DAFA425D837 /* PBXTargetDependency */,
			);
			name = GLFWApp;
			productName = GLFWApp;
			productReference = 8C4AA5158816412192D549DE /* GLFWApp */;
			productType = "com.apple.product-type.tool";
		};
		B9D2CDE3D70549DEA90BF931 /* Immediate */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 1C276CFD5B254CB8833876B9 /* Build configuration list for PBXNativeTarget "Immediate" */;
			buildPhases = (
				51F5C2DBA66642E4B8426C8A /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				F8AF07C26918474883451CA3 /* PBXTargetDependency */,
				6D64093E81C444C08C3D161A /* PBXTargetDependency */,
			);
			name = Immediate;
			productName = Immediate;
			productReference = F87B39B680EC4678A905F6B0 /* Immediate */;
			productType = "com.apple.product-type.tool";
		};
		BDE3C89AC5D8432EB0724818 /* glfw */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = B3521E27421C45E6B0799225 /* Build configuration list for PBXNativeTarget "glfw" */;
			buildPhases = (
				51FB09FA33764AC6AE60C12D /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				F70E28A7C32640138C5DDC31 /* PBXTargetDependency */,
			);
			name = glfw;
			productName = glfw;
			productReference = B18B2C73BDE34008A161DC35 /* glfw */;
			productType = "com.apple.product-type.library.static";
		};
		BE4AE7D2D04745A2B7B33E5F /* TextureLoader */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = DCFC03096E654A359ADEA610 /* Build configuration list for PBXNativeTarget "TextureLoader" */;
			buildPhases = (
				56BF4298618C46A886422565 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				10F24368B3D14A3CADFC08E0 /* PBXTargetDependency */,
				79E7DB2AADAE4A918A39A216 /* PBXTargetDependency */,
			);
			name = TextureLoader;
			productName = TextureLoader;
			productReference = E01214FB5A8D498193F4F7D8 /* TextureLoader */;
			productType = "com.apple.product-type.tool";
		};
		C0AD1F187A0B48B992F0119D /* reopen */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 694EB8C776204670AFE9EF76 /* Build configuration list for PBXNativeTarget "reopen" */;
			buildPhases = (
				B6703E67C1874D46AC8F181B /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				0A9537187BA0459993F8BB6F /* PBXTargetDependency */,
				312EF7194D0C4FB4B6CA1A7C /* PBXTargetDependency */,
			);
			name = reopen;
			productName = reopen;
			productReference = 9B9B4AE375EB4ED295FFFE60 /* reopen */;
			productType = "com.apple.product-type.tool";
		};
		C443643F4717459BA0F7BB94 /* events */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = AD38CAAD940841E595D154A0 /* Build configuration list for PBXNativeTarget "events" */;
			buildPhases = (
				C4A4526E100146EF9398E824 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				BB221903549A45FB823D6584 /* PBXTargetDependency */,
				1FCF803A2766427580CE7171 /* PBXTargetDependency */,
			);
			name = events;
			productName = events;
			productReference = 5AB1E84BCCED42C78A744C84 /* events */;
			productType = "com.apple.product-type.tool";
		};
		C569E1EA76B648F8A072F7E1 /* Model */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 19D659C2825B4C1BBFDDC775 /* Build configuration list for PBXNativeTarget "Model" */;
			buildPhases = (
				90BE68C6349D4A08AF0C2E26 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				9EDC85472A3C440B8B43AC95 /* PBXTargetDependency */,
				3448E21412694A1BB18C26AC /* PBXTargetDependency */,
			);
			name = Model;
			productName = Model;
			productReference = 3567D43CD64548ABA72AB714 /* Model */;
			productType = "com.apple.product-type.tool";
		};
		C6FC65BFE2BD4B848208F4F0 /* ImmediateTriangles */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 21010335E7C64C968DFADB27 /* Build configuration list for PBXNativeTarget "ImmediateTriangles" */;
			buildPhases = (
				95FD8D5602964B369DF325B1 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				0A0E5319053E4A2CBDEE2770 /* PBXTargetDependency */,
				E14E8B6FF441433BBF6506D9 /* PBXTargetDependency */,
			);
			name = ImmediateTriangles;
			productName = ImmediateTriangles;
			productReference = 4DC451E0D8904E519AF465DE /* ImmediateTriangles */;
			productType = "com.apple.product-type.tool";
		};
		D0335718601B4473AE98185E /* gamma */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = DBC12BF4DE7E4D218A772889 /* Build configuration list for PBXNativeTarget "gamma" */;
			buildPhases = (
				61CF68F04BF04315A450E72C /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				FB1950E3B0BC4F0798BE78A2 /* PBXTargetDependency */,
				F9F499025ACF4E438C293238 /* PBXTargetDependency */,
			);
			name = gamma;
			productName = gamma;
			productReference = D26887E1571B4BF8A9DE0A2B /* gamma */;
			productType = "com.apple.product-type.tool";
		};
		DBF30549174341009A49685D /* modes */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 341B9BC788934CE2B9D88C29 /* Build configuration list for PBXNativeTarget "modes" */;
			buildPhases = (
				21D732904FAE431BA6B9CEB1 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				1267DAEA2D6F49278E8F4F8D /* PBXTargetDependency */,
				514DC81D8ECD4D27B502907A /* PBXTargetDependency */,
			);
			name = modes;
			productName = modes;
			productReference = C0D3798B19AC4727A2FB4C65 /* modes */;
			productType = "com.apple.product-type.tool";
		};
		E428435B102C48A38B746184 /* Cube */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 1BAA9FDE1D49493D85607CD3 /* Build configuration list for PBXNativeTarget "Cube" */;
			buildPhases = (
				7B7CE95025914DE08292C6CB /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				5AF4624B3CD047D4AC7FA80B /* PBXTargetDependency */,
				2B6069D7A8F3410D916D72A3 /* PBXTargetDependency */,
			);
			name = Cube;
			productName = Cube;
			productReference = 764940F7C24542DFBD2A4C73 /* Cube */;
			productType = "com.apple.product-type.tool";
		};
		FA1A94DF7A674DA0A959AFA4 /* TriangleOrtho */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 1A11F6396E5C41AA98B07643 /* Build configuration list for PBXNativeTarget "TriangleOrtho" */;
			buildPhases = (
				313F69E7740A4DAAA7572CC0 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				967134A74C294B29BFB765C5 /* PBXTargetDependency */,
				77DEAFCDADA549B0B27D470E /* PBXTargetDependency */,
			);
			name = TriangleOrtho;
			productName = TriangleOrtho;
			productReference = DD6E4F9C3EAA4DDB9B4F4B23 /* TriangleOrtho */;
			productType = "com.apple.product-type.tool";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		F5E098188F82442E84BE60E5 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				BuildIndependentTargetsInParallel = YES;
			};
			buildConfigurationList = 6B87094913624CF6ADE92D6B /* Build configuration list for PBXProject "UaR_OpenGL" */;
			buildSettings = {
			};
			buildStyles = (
				9EF57CA954F44F1E837B0A6D /* Debug */,
				85852379C5294158B0F01AA3 /* Release */,
				527E0A034FC24432AE7359E8 /* MinSizeRel */,
				698125978C1B4260845298E8 /* RelWithDebInfo */,
			);
			compatibilityVersion = "Xcode 3.2";
			hasScannedForEncodings = 0;
			mainGroup = B6ADE69F2B014D3CA79BD44D;
			projectDirPath = ../;
			projectRoot = "";
			targets = (
				AC46AF086FB94535AD86558E /* ALL_BUILD */,
				E428435B102C48A38B746184 /* Cube */,
				5D032148F2D5403EABBAA95E /* DynamicMesh */,
				92C9D52D3445414F8511509E /* Extensions */,
				ABA061AFB00A40BDBADD9EEB /* GLFWApp */,
				6B9207DFB3DA4F51A7FF5C46 /* GLFWwindow */,
				B9D2CDE3D70549DEA90BF931 /* Immediate */,
				C6FC65BFE2BD4B848208F4F0 /* ImmediateTriangles */,
				6776F94C10EA4DDCA85329A5 /* Keyboard */,
				6A050A6FDFF14C2FA6CC589A /* Lighting */,
				A1E9731CC5B9466A916C82D5 /* LightingAndTexture */,
				C569E1EA76B648F8A072F7E1 /* Model */,
				15C7EB72C3E94A36879B0FB6 /* ModelView */,
				0B147D42A3F24CBEA2A2AEB8 /* Mouse */,
				11FBAE78E67D4CB899DD161C /* Texture */,
				BE4AE7D2D04745A2B7B33E5F /* TextureLoader */,
				48D14F9E891C4241BDC0284D /* TriangleBuffer */,
				897ED64C6CFB4B68BB62C02B /* TriangleColorBuffer */,
				FA1A94DF7A674DA0A959AFA4 /* TriangleOrtho */,
				3BB51AEE4C9242C39899D3C0 /* Version */,
				D1BDF48FD8FD4353A35A71E4 /* ZERO_CHECK */,
				076FA14610C24E7DB37F8A42 /* install */,
				938656ED1568458DB0267E19 /* uninstall */,
				BDE3C89AC5D8432EB0724818 /* glfw */,
				8A0B984A8AE24D61976E96D9 /* accuracy */,
				7CCA9764AF884A5BA0F567C2 /* clipboard */,
				589858B3D9CF47DDBBE17F25 /* defaults */,
				C443643F4717459BA0F7BB94 /* events */,
				402683BDEBBA404E949853DD /* fsaa */,
				D0335718601B4473AE98185E /* gamma */,
				A322ADC4785A499C9C2AEAFD /* glfwinfo */,
				8D8C5716D5B049C3B8283A0D /* iconify */,
				36C64F7CCFF34B3EA79D7531 /* joysticks */,
				DBF30549174341009A49685D /* modes */,
				55B0EB4BC6AA4DDCA3D5ECE1 /* peter */,
				C0AD1F187A0B48B992F0119D /* reopen */,
				6ED44D93C81540C5ABF4F21E /* sharing */,
				A812115358A44C188AA222D3 /* tearing */,
				A641D9E0EE4741AFB160CDB6 /* threads */,
				1AA25737399D4122881D3626 /* title */,
				776D7F9DB09B496ABA01513D /* windows */,
			);
		};
/* End PBXProject section */

/* Begin PBXShellScriptBuildPhase section */
		0CF96B7AC95948FFB334D3B1 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/Sun/Repositories/MyProjects/Up\\ and\\ Running\\ with\\ OpenGL/xcode -f /Users/Sun/Repositories/MyProjects/Up\\ and\\ Running\\ with\\ OpenGL/xcode/CMakeScripts/ALL_BUILD_cmakeRulesBuildPhase.make$CONFIGURATION all";
			showEnvVarsInLog = 0;
		};
		1467EB6907F64EFA8E0DF946 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/Sun/Repositories/MyProjects/Up\\ and\\ Running\\ with\\ OpenGL/xcode -f /Users/Sun/Repositories/MyProjects/Up\\ and\\ Running\\ with\\ OpenGL/xcode/CMakeScripts/install_postBuildPhase.make$CONFIGURATION all";
			showEnvVarsInLog = 0;
		};
		46CC9B73AA564A18BB21F0AC = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# shell script goes here
exit 0";
			showEnvVarsInLog = 0;
		};
		56860DD0EF42464CAE98A1C5 = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# shell script goes here
exit 0";
			showEnvVarsInLog = 0;
		};
		6346A6E5F9EB4EBAA65B5205 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/Sun/Repositories/MyProjects/Up\\ and\\ Running\\ with\\ OpenGL/xcode -f /Users/Sun/Repositories/MyProjects/Up\\ and\\ Running\\ with\\ OpenGL/xcode/CMakeScripts/ZERO_CHECK_cmakeRulesBuildPhase.make$CONFIGURATION all";
			showEnvVarsInLog = 0;
		};
		6DAACDCB32B6470F94BE15CE /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/Sun/Repositories/MyProjects/Up\\ and\\ Running\\ with\\ OpenGL/xcode/glfw -f /Users/Sun/Repositories/MyProjects/Up\\ and\\ Running\\ with\\ OpenGL/xcode/glfw/CMakeScripts/uninstall_cmakeRulesBuildPhase.make$CONFIGURATION all";
			showEnvVarsInLog = 0;
		};
		7E14B0A4297B41A1AEE687C7 = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# shell script goes here
exit 0";
			showEnvVarsInLog = 0;
		};
		F1558F3CDB3E47B99D0CD4B1 = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# shell script goes here
exit 0";
			showEnvVarsInLog = 0;
		};
/* End PBXShellScriptBuildPhase section */

/* Begin PBXSourcesBuildPhase section */
		029275659F0542F18008DBF8 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				EC0ED0696E304F5C84A2EBD4 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/ModelView.cpp */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		076238132B094D3CB8CB347C /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				EF88C518A1D74F0EB3D87D2D /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/sharing.c */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		0A4240200957426A961D1038 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				062514B4DE6F4DAFA799CF04 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/accuracy.c */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		0C33A182DA7A494F9480679E /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				E1FE79DABB084FF8B4823B6A /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/tearing.c */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		0DEFE1548B5E46E192995F9D /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				90AABB032B8749B1A9C103CD /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/getopt.c */,
				CD12252B670849ACA6D90735 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/clipboard.c */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		21D732904FAE431BA6B9CEB1 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				E6B00F18C95E467E93C1EA29 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/getopt.c */,
				1DE822012F3C475FA347FF20 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/modes.c */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		25B21E3DF1C64BCCA7EA92C0 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				F18F52491C0349EEBC784D4C /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/Extensions.cpp */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		2CC8A3AD80AA4B9EB2C63133 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				9644498130874D39A5FA879B /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/getopt.c */,
				86525983459C4D9BB0CD830E /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/fsaa.c */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		313F69E7740A4DAAA7572CC0 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				39A41E7CC73348188CA9C72F /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/TriangleOrtho.cpp */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		329E03B472474293B8817324 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				9400C0D9B5A64111B8850AE0 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/TriangleBuffer.cpp */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		3D406283CE0A43628B2CAFF4 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				6DC8B9D17A2B4292B449E7CE /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/Lighting.cpp */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		41996658664F4B98B6E65FEB /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1176287D1EA0480AACCF70B8 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/DynamicMesh.cpp */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		45B941B2803D44D8826D9918 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				0AB86F8CD5F8453285DA5946 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/GLFWApp.cpp */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		4D932998A93B422080470163 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				B0296F03EA074C5DBA365731 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/Texture.cpp */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		51F5C2DBA66642E4B8426C8A /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				7949905DEC83447CBC4006ED /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/Immediate.cpp */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		51FB09FA33764AC6AE60C12D /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				3C67D866987948C69366B6DE /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/clipboard.c */,
				661EFC999E5349D8A182578D /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/cocoa_clipboard.m */,
				1432D85E6B20494CA87FF0C6 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/cocoa_gamma.c */,
				9D7FF0B035FF4A0783E96D08 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/cocoa_init.m */,
				8B28F15E66A84D6FA4915E6D /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/cocoa_joystick.m */,
				91E6542B4FB842B297B6B9E2 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/cocoa_monitor.m */,
				5D261ACDC1324974AE95B386 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/cocoa_time.c */,
				BB5388741B4C48DABEC26728 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/cocoa_window.m */,
				D0FF86CAED424E3282A40BDE /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/context.c */,
				8EEFD1EB46564FB8870714DA /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/gamma.c */,
				27A4F33D35D74B89A6D7F9E4 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/init.c */,
				48DAC5C5200F4FFEAD102464 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/input.c */,
				1F501CA20C8B481D8D5B3EE4 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/joystick.c */,
				BF5EA18053444437ABFF367F /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/monitor.c */,
				A56DEF6974D64F948C4628F4 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/nsgl_context.m */,
				CAB0CD3EF4A64091BE45D580 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/time.c */,
				867B719CEDC842AE99BAA54B /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src/window.c */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		527A67DB1A694933B5F37C7B /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				433512EE62AD41CAAD0B047C /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/TriangleColorBuffer.cpp */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		538464854CB9456B997DAA88 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				FC8427E9B98A45DD8C37172B /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/title.c */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		56BF4298618C46A886422565 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				8723FAA9318A4FD0865E523B /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/TextureLoader.cpp */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		5ECCCCB4E7714A969E0D24CC /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				A8B3F4B9FAD7480C971D9080 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/Version.cpp */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		60E02AC22D7441D4A8C0A656 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				DAFF66106A38495BAAC8F665 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/joysticks.c */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		61CF68F04BF04315A450E72C /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				F10C57BBBF3445F29588BDD9 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/getopt.c */,
				8E0227D5AFB64E27A384D442 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/gamma.c */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		675AFB1FC9434D928171D452 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				4876EA29499747A1A0E19D3F /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/Keyboard.cpp */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		7B7CE95025914DE08292C6CB /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				929FAB9908114A82B6698FC8 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/Cube.cpp */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		8591A343512E44CF95C24025 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				384379DDF42C41248D705615 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/windows.c */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		90BE68C6349D4A08AF0C2E26 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				C6447CB3B254494AB7401B19 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/Model.cpp */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		936FF838DCE44C32B2DE15D5 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				C62A21B73A0846B4ADFAFF84 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/tinycthread.c */,
				310B95A7EAE043AD896F9F6C /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/threads.c */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		938A3BB8BA5641839DF96FC7 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				2F4DABCD6FC846A7A9BFC7AA /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/peter.c */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		95FD8D5602964B369DF325B1 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				C8270024A3504C4A98C38DED /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/ImmediateTriangles.cpp */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		AA0841787A774470954276F5 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				5993104F898643BB958E4B62 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/GLFWwindow.cpp */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		B1484233ABE244979DB2BDD6 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				4D4C1070AD5947BD9F1AA383 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/Mouse.cpp */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		B2BCDA5EBB6249DD9D3528C1 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				44D5395A156745A49806656C /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/examples/LightingAndTexture.cpp */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		B6703E67C1874D46AC8F181B /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				75B1B416E0B44FA096E15AF0 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/reopen.c */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		BFEA0AE8B79D4BCDB93A77DE /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				BB1951F49DED42F49A543A2D /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/getopt.c */,
				0477C2741CE247E3B3E04B3F /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/iconify.c */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		C4A4526E100146EF9398E824 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				BFBC0D0F51584F579E870CF9 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/getopt.c */,
				D9D1AF976BDF46BC93BF22A4 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/events.c */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		C893B868932446578FEFA59D /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				BF4836E5206549FD803C4A44 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps/getopt.c */,
				7568611437104DEDB8CE4645 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/glfwinfo.c */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		F0DBF1B0948942F387EC0067 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				CB15030ED9724349A8394FD0 /* /Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/tests/defaults.c */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		01A4C6FC01384002B29E83F7 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D1BDF48FD8FD4353A35A71E4 /* ZERO_CHECK */;
			targetProxy = 242EC4FFFB9343AB9BE60228 /* PBXContainerItemProxy */;
		};
		05D01E1E30A9420498B59651 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D1BDF48FD8FD4353A35A71E4 /* ZERO_CHECK */;
			targetProxy = 4C16A59375D74B70BF0D186D /* PBXContainerItemProxy */;
		};
		09F78CB607DA4A53903A1B9A /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = BDE3C89AC5D8432EB0724818 /* glfw */;
			targetProxy = 5CDC11D01E36429EA0A48A8F /* PBXContainerItemProxy */;
		};
		0A0E5319053E4A2CBDEE2770 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = BDE3C89AC5D8432EB0724818 /* glfw */;
			targetProxy = 2C5EA658C2584F77896C4A55 /* PBXContainerItemProxy */;
		};
		0A3A3460E63A452888A2FC79 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = BDE3C89AC5D8432EB0724818 /* glfw */;
			targetProxy = B929DA8F85DC431A8FEFF6B0 /* PBXContainerItemProxy */;
		};
		0A9537187BA0459993F8BB6F /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = BDE3C89AC5D8432EB0724818 /* glfw */;
			targetProxy = 5B5BF73AEDF84751AE1AAA7D /* PBXContainerItemProxy */;
		};
		0AFA59E42CAC4B06BB17D8D4 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D1BDF48FD8FD4353A35A71E4 /* ZERO_CHECK */;
			targetProxy = 87502BC8B9E543F29D0C4BE4 /* PBXContainerItemProxy */;
		};
		10F24368B3D14A3CADFC08E0 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = BDE3C89AC5D8432EB0724818 /* glfw */;
			targetProxy = 5BFCC607A4314549A725CDCE /* PBXContainerItemProxy */;
		};
		1267DAEA2D6F49278E8F4F8D /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = BDE3C89AC5D8432EB0724818 /* glfw */;
			targetProxy = DD4BBC6ACF7643CB90472CE2 /* PBXContainerItemProxy */;
		};
		139F0C13F6AE4C3DB7E1FE85 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = BDE3C89AC5D8432EB0724818 /* glfw */;
			targetProxy = 94E9E2301D7041DCAFD673EF /* PBXContainerItemProxy */;
		};
		13E0094BB8B54E9090049E4E /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 48D14F9E891C4241BDC0284D /* TriangleBuffer */;
			targetProxy = EF1BEA6769394085AA1927DE /* PBXContainerItemProxy */;
		};
		1806D30B9F9F454294E18C08 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = BDE3C89AC5D8432EB0724818 /* glfw */;
			targetProxy = A22991B55C4D43719B244AA6 /* PBXContainerItemProxy */;
		};
		1B218E397C9C4DAFA425D837 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D1BDF48FD8FD4353A35A71E4 /* ZERO_CHECK */;
			targetProxy = 39E2D727437B417FAAED6BEA /* PBXContainerItemProxy */;
		};
		1B77F1356D9C476682AF40D4 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 3BB51AEE4C9242C39899D3C0 /* Version */;
			targetProxy = 015BBED0393245BC9F0F452E /* PBXContainerItemProxy */;
		};
		1CC01BF92B2E4E05B259A6E4 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = B9D2CDE3D70549DEA90BF931 /* Immediate */;
			targetProxy = 946C30F1F0C2425C9CECDD38 /* PBXContainerItemProxy */;
		};
		1E1C5F3B9AE74BA78281B9C5 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = A812115358A44C188AA222D3 /* tearing */;
			targetProxy = E7A009ED6B75425DA1859B93 /* PBXContainerItemProxy */;
		};
		1E584B93F6A147CB82EC26FE /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = BDE3C89AC5D8432EB0724818 /* glfw */;
			targetProxy = 6FAF97BFCC634A0C89B8B4C1 /* PBXContainerItemProxy */;
		};
		1FCF803A2766427580CE7171 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D1BDF48FD8FD4353A35A71E4 /* ZERO_CHECK */;
			targetProxy = 4618FF5F634B4B6A93A928F7 /* PBXContainerItemProxy */;
		};
		22998F5502AC46C99A387CE0 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D1BDF48FD8FD4353A35A71E4 /* ZERO_CHECK */;
			targetProxy = 9E8D7CCD78004AEAB6EB4824 /* PBXContainerItemProxy */;
		};
		22E5F79DCDFB4A75BEC31E65 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D0335718601B4473AE98185E /* gamma */;
			targetProxy = 63D598B625604979988E39D3 /* PBXContainerItemProxy */;
		};
		23058D756B77450AAF2FAD30 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = BDE3C89AC5D8432EB0724818 /* glfw */;
			targetProxy = A70C4008D3E840D9919B80F7 /* PBXContainerItemProxy */;
		};
		294577E7739F4129B33DA6FB /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D1BDF48FD8FD4353A35A71E4 /* ZERO_CHECK */;
			targetProxy = B02C5953A89440B8909A80B6 /* PBXContainerItemProxy */;
		};
		2A1FFDD968EC4A19924591D0 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = BDE3C89AC5D8432EB0724818 /* glfw */;
			targetProxy = 59DC04F3C6234372BDBF660E /* PBXContainerItemProxy */;
		};
		2B6069D7A8F3410D916D72A3 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D1BDF48FD8FD4353A35A71E4 /* ZERO_CHECK */;
			targetProxy = 1BF54CF9B5DE42DAAB8756F3 /* PBXContainerItemProxy */;
		};
		2E35F0E97B544CC8BCDEEB57 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = A641D9E0EE4741AFB160CDB6 /* threads */;
			targetProxy = 4AFC57B1B1FD4F4883D775C7 /* PBXContainerItemProxy */;
		};
		30A4441BA2D94FDFA122D2D1 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D1BDF48FD8FD4353A35A71E4 /* ZERO_CHECK */;
			targetProxy = 71576F3B02B3438D8DEABE04 /* PBXContainerItemProxy */;
		};
		312EF7194D0C4FB4B6CA1A7C /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D1BDF48FD8FD4353A35A71E4 /* ZERO_CHECK */;
			targetProxy = DF285E7092E8468EAB909ADB /* PBXContainerItemProxy */;
		};
		32F11232AB504C5A8260FE13 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = BDE3C89AC5D8432EB0724818 /* glfw */;
			targetProxy = 46DB9F9ECF224620838D6D23 /* PBXContainerItemProxy */;
		};
		3448E21412694A1BB18C26AC /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D1BDF48FD8FD4353A35A71E4 /* ZERO_CHECK */;
			targetProxy = 1EF03AFF3A094B70B70DE045 /* PBXContainerItemProxy */;
		};
		3ACA2402D0FE45ADAAC930F8 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D1BDF48FD8FD4353A35A71E4 /* ZERO_CHECK */;
			targetProxy = 13419A2FC08E484497B3E6BB /* PBXContainerItemProxy */;
		};
		3B895BA8E753463D91C7676C /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = DBF30549174341009A49685D /* modes */;
			targetProxy = 84809CFA02D845EEA0212B1E /* PBXContainerItemProxy */;
		};
		3CFA5574552B43058B5B6BD7 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = BDE3C89AC5D8432EB0724818 /* glfw */;
			targetProxy = 1BDA0AA75CD74F76AEF309EB /* PBXContainerItemProxy */;
		};
		3DB2DE38AF744926AF92E9FB /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = BDE3C89AC5D8432EB0724818 /* glfw */;
			targetProxy = 9E973E43210F470DAB29D92D /* PBXContainerItemProxy */;
		};
		4257008E3D414918B6F3E5F0 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D1BDF48FD8FD4353A35A71E4 /* ZERO_CHECK */;
			targetProxy = 785ECB1EE5884CF38F104773 /* PBXContainerItemProxy */;
		};
		4910FAE165254558BFAF3280 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 0B147D42A3F24CBEA2A2AEB8 /* Mouse */;
			targetProxy = EF41C542E407456AB290DB69 /* PBXContainerItemProxy */;
		};
		49624000095F4982BB863F6A /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D1BDF48FD8FD4353A35A71E4 /* ZERO_CHECK */;
			targetProxy = 8B129469772B43EAB6B636BA /* PBXContainerItemProxy */;
		};
		4AB9500956E2471ABB801AC0 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D1BDF48FD8FD4353A35A71E4 /* ZERO_CHECK */;
			targetProxy = 11B7FBA081FC4B11AFD8A6DB /* PBXContainerItemProxy */;
		};
		4DE9A8884B134987BB933CC4 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = BDE3C89AC5D8432EB0724818 /* glfw */;
			targetProxy = 2566CCC5238C4DE585F90CC0 /* PBXContainerItemProxy */;
		};
		514DC81D8ECD4D27B502907A /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D1BDF48FD8FD4353A35A71E4 /* ZERO_CHECK */;
			targetProxy = 667FE326EB3E43C68C8925D5 /* PBXContainerItemProxy */;
		};
		5459CD30411C4EF38159DD59 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = A322ADC4785A499C9C2AEAFD /* glfwinfo */;
			targetProxy = 1EC6DC4A15824132BCF99A78 /* PBXContainerItemProxy */;
		};
		54B0457C4DA747B6BA590366 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = BDE3C89AC5D8432EB0724818 /* glfw */;
			targetProxy = 55BF522367BB4092A389EAD7 /* PBXContainerItemProxy */;
		};
		5536031B3A554F1A819CE629 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D1BDF48FD8FD4353A35A71E4 /* ZERO_CHECK */;
			targetProxy = 48494E8D82F14E1A9ACEAEAA /* PBXContainerItemProxy */;
		};
		5A9F341E1A8E4D0D9934DF48 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D1BDF48FD8FD4353A35A71E4 /* ZERO_CHECK */;
			targetProxy = 730F8E4D979541B1AF732CE6 /* PBXContainerItemProxy */;
		};
		5AF4624B3CD047D4AC7FA80B /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = BDE3C89AC5D8432EB0724818 /* glfw */;
			targetProxy = D86DBCE81BB44B8A948F5179 /* PBXContainerItemProxy */;
		};
		5B446BAD91AD44BE9BA032C0 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = C0AD1F187A0B48B992F0119D /* reopen */;
			targetProxy = 442D09CAF8DE42C29AB8D525 /* PBXContainerItemProxy */;
		};
		5B44F96D4328486E8D4169E8 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D1BDF48FD8FD4353A35A71E4 /* ZERO_CHECK */;
			targetProxy = D367A86D65644403A5925EBA /* PBXContainerItemProxy */;
		};
		60FD5D7236B4432C98683CB5 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 897ED64C6CFB4B68BB62C02B /* TriangleColorBuffer */;
			targetProxy = 8AD40DF3207B43638FF18648 /* PBXContainerItemProxy */;
		};
		6BF50FDAEAF346A9981C2B99 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = BDE3C89AC5D8432EB0724818 /* glfw */;
			targetProxy = 210A5AE4781C4445B7383212 /* PBXContainerItemProxy */;
		};
		6CD55F623A1F46FAA9BDABD2 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = BDE3C89AC5D8432EB0724818 /* glfw */;
			targetProxy = 7FFAF90B03BB492CBD395615 /* PBXContainerItemProxy */;
		};
		6D64093E81C444C08C3D161A /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D1BDF48FD8FD4353A35A71E4 /* ZERO_CHECK */;
			targetProxy = 0639A742DEE3407DA4296C29 /* PBXContainerItemProxy */;
		};
		758BE2645C2D40EEB46CE6B0 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 5D032148F2D5403EABBAA95E /* DynamicMesh */;
			targetProxy = 31F0892BDD844A7E9AA051DE /* PBXContainerItemProxy */;
		};
		763BCF2948F04130BA676E42 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = BDE3C89AC5D8432EB0724818 /* glfw */;
			targetProxy = 3D9B6A550BA54E17BF00B92B /* PBXContainerItemProxy */;
		};
		77DEAFCDADA549B0B27D470E /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D1BDF48FD8FD4353A35A71E4 /* ZERO_CHECK */;
			targetProxy = 3228361552274E788F0FF197 /* PBXContainerItemProxy */;
		};
		78C3D57D9A5748CF960896FA /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = BDE3C89AC5D8432EB0724818 /* glfw */;
			targetProxy = F116A2A3ED024F22A7B53214 /* PBXContainerItemProxy */;
		};
		78E395DA98A4463BBAEDF301 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D1BDF48FD8FD4353A35A71E4 /* ZERO_CHECK */;
			targetProxy = FDE05267DBD14E88BF73BD9C /* PBXContainerItemProxy */;
		};
		79E7DB2AADAE4A918A39A216 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D1BDF48FD8FD4353A35A71E4 /* ZERO_CHECK */;
			targetProxy = 55449B74D86E4206AB93B1D4 /* PBXContainerItemProxy */;
		};
		7E828DCB0D3648BEAD49DFB3 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = A1E9731CC5B9466A916C82D5 /* LightingAndTexture */;
			targetProxy = A501FC40CA8447E2AC56F5B6 /* PBXContainerItemProxy */;
		};
		7EE725D93F0245CD9859500F /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 6B9207DFB3DA4F51A7FF5C46 /* GLFWwindow */;
			targetProxy = B18AF9AEC52C4F5F8606861A /* PBXContainerItemProxy */;
		};
		82C04C79B2654107A7AE46F7 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = C6FC65BFE2BD4B848208F4F0 /* ImmediateTriangles */;
			targetProxy = F3A69D8F5D1E45FEA6EA9DA7 /* PBXContainerItemProxy */;
		};
		872A87FF07EA49528F182314 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55B0EB4BC6AA4DDCA3D5ECE1 /* peter */;
			targetProxy = 1901F411CB6642AB9CC2C830 /* PBXContainerItemProxy */;
		};
		8906B5DE913C453F8C4A2717 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 6ED44D93C81540C5ABF4F21E /* sharing */;
			targetProxy = 4BD7178730094D2DA190DC10 /* PBXContainerItemProxy */;
		};
		89149658637C47A4B7B6119A /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8D8C5716D5B049C3B8283A0D /* iconify */;
			targetProxy = 0EEE09906A14405888EC14CE /* PBXContainerItemProxy */;
		};
		8A06E9FEACF04FF4BC0FB09A /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D1BDF48FD8FD4353A35A71E4 /* ZERO_CHECK */;
			targetProxy = 176EB5646C12464694DFED8A /* PBXContainerItemProxy */;
		};
		918AEA37ADD046D8A32A09DA /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = BDE3C89AC5D8432EB0724818 /* glfw */;
			targetProxy = 9CC8B20F853E4715B5757BF4 /* PBXContainerItemProxy */;
		};
		933DB9B7ACF945ECB4EDD3A0 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = BDE3C89AC5D8432EB0724818 /* glfw */;
			targetProxy = 5983923FDD194D3BA71F0190 /* PBXContainerItemProxy */;
		};
		93C0D333BBCB4DB29409EB45 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = BDE3C89AC5D8432EB0724818 /* glfw */;
			targetProxy = EE9451086E664AB38C6ED390 /* PBXContainerItemProxy */;
		};
		94FC0E51B5ED4CC7923BA71C /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = BDE3C89AC5D8432EB0724818 /* glfw */;
			targetProxy = EA8E9FF2B46F4813B5FFF5ED /* PBXContainerItemProxy */;
		};
		9654C9160A134933AF0D23F5 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D1BDF48FD8FD4353A35A71E4 /* ZERO_CHECK */;
			targetProxy = BC35399A88DE472B80B2EEDA /* PBXContainerItemProxy */;
		};
		967134A74C294B29BFB765C5 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = BDE3C89AC5D8432EB0724818 /* glfw */;
			targetProxy = 3B8652AD539F4E329D7E10BA /* PBXContainerItemProxy */;
		};
		9701FB00C398462F87A732D8 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = C569E1EA76B648F8A072F7E1 /* Model */;
			targetProxy = 39474759B66348D6B6B05963 /* PBXContainerItemProxy */;
		};
		9EDC85472A3C440B8B43AC95 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = BDE3C89AC5D8432EB0724818 /* glfw */;
			targetProxy = 48750853167E4DAEBF541C33 /* PBXContainerItemProxy */;
		};
		A05BE1A982EB4235959E6C68 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 6A050A6FDFF14C2FA6CC589A /* Lighting */;
			targetProxy = 22B4862A95504D52A2BFB422 /* PBXContainerItemProxy */;
		};
		A2555EB28E7245D9AE995583 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D1BDF48FD8FD4353A35A71E4 /* ZERO_CHECK */;
			targetProxy = 3CDBDA3E2CC84460857E1682 /* PBXContainerItemProxy */;
		};
		A5B5BB70B1114CA28C86B10F /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D1BDF48FD8FD4353A35A71E4 /* ZERO_CHECK */;
			targetProxy = 77542DDD10F4468381331995 /* PBXContainerItemProxy */;
		};
		A6A24AA1D5DC4E599FD0C16F /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = BDE3C89AC5D8432EB0724818 /* glfw */;
			targetProxy = 8DAE5C433AAF4515B965850F /* PBXContainerItemProxy */;
		};
		AAD5DB7DA69047919B539186 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 402683BDEBBA404E949853DD /* fsaa */;
			targetProxy = EC4C7FFB29254147BD6FA7F2 /* PBXContainerItemProxy */;
		};
		ABABA8DBBF7541F085227AC0 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 589858B3D9CF47DDBBE17F25 /* defaults */;
			targetProxy = 160CA68AA16D487D8A17CB58 /* PBXContainerItemProxy */;
		};
		AE865F6C5A8440C7B285FDB8 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 776D7F9DB09B496ABA01513D /* windows */;
			targetProxy = E1300B4AC856438CAE764AAD /* PBXContainerItemProxy */;
		};
		AF9916C36F5E4509A917BB52 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D1BDF48FD8FD4353A35A71E4 /* ZERO_CHECK */;
			targetProxy = B713D60360534A52B2DB3BC9 /* PBXContainerItemProxy */;
		};
		B1D9A90CBFAB44758C7628EA /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = C443643F4717459BA0F7BB94 /* events */;
			targetProxy = 1B9258D627E7492F9021A117 /* PBXContainerItemProxy */;
		};
		B2F9A418160A430481B53D07 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = BDE3C89AC5D8432EB0724818 /* glfw */;
			targetProxy = 480858BA562040F08E406B71 /* PBXContainerItemProxy */;
		};
		BB221903549A45FB823D6584 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = BDE3C89AC5D8432EB0724818 /* glfw */;
			targetProxy = 84FC7B7D0FC64E4890A7A0E1 /* PBXContainerItemProxy */;
		};
		BD9ECCC414BD4780ADC36DA4 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7CCA9764AF884A5BA0F567C2 /* clipboard */;
			targetProxy = D939CC0011DB4032AB69F7E5 /* PBXContainerItemProxy */;
		};
		BF0972E0027C4FD69CF5952B /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = FA1A94DF7A674DA0A959AFA4 /* TriangleOrtho */;
			targetProxy = 11D4CAEDD92C4AC3969E4F90 /* PBXContainerItemProxy */;
		};
		BFC9CEA57183404BB781EAFF /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D1BDF48FD8FD4353A35A71E4 /* ZERO_CHECK */;
			targetProxy = 16040A57A3D2421EBB4F42CD /* PBXContainerItemProxy */;
		};
		C0A7F55A483E4F818A547DFE /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D1BDF48FD8FD4353A35A71E4 /* ZERO_CHECK */;
			targetProxy = 14F75CBAF1744C8286D3D851 /* PBXContainerItemProxy */;
		};
		C14F3ACF101D4E1A82AE15C2 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 11FBAE78E67D4CB899DD161C /* Texture */;
			targetProxy = 9681C3B757934D34AB39F14B /* PBXContainerItemProxy */;
		};
		C3098BC51D3D4A598038DB12 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 15C7EB72C3E94A36879B0FB6 /* ModelView */;
			targetProxy = 21DC3239A19E4C43982B657E /* PBXContainerItemProxy */;
		};
		C98FAF1015CE4018ACB939A4 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = BDE3C89AC5D8432EB0724818 /* glfw */;
			targetProxy = D04F240135FB46A9A2D14765 /* PBXContainerItemProxy */;
		};
		CC0016A630804E4EAECB6477 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 36C64F7CCFF34B3EA79D7531 /* joysticks */;
			targetProxy = 0BDE11D9FC7747BE8A4C682C /* PBXContainerItemProxy */;
		};
		CD421AE0CADB4402BE46346D /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = BDE3C89AC5D8432EB0724818 /* glfw */;
			targetProxy = DF3F0B56AB91487CBFE14BB4 /* PBXContainerItemProxy */;
		};
		CE2440DFA7C74CBDB948FCB7 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 1AA25737399D4122881D3626 /* title */;
			targetProxy = AC3407F765B44388BBAEA819 /* PBXContainerItemProxy */;
		};
		CEA3A0C82EEB446B8A95CD42 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = AC46AF086FB94535AD86558E /* ALL_BUILD */;
			targetProxy = E900A70CDFFD4AADA917DD0F /* PBXContainerItemProxy */;
		};
		CF9AAEF07FDC462B9C22DA38 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D1BDF48FD8FD4353A35A71E4 /* ZERO_CHECK */;
			targetProxy = CD1BFF5697D5446597E0988E /* PBXContainerItemProxy */;
		};
		D64B75C5086A42BBA096685F /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 92C9D52D3445414F8511509E /* Extensions */;
			targetProxy = BA715EE6C64F4E919D7864D4 /* PBXContainerItemProxy */;
		};
		D659A614C6CE42DB82A53D26 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D1BDF48FD8FD4353A35A71E4 /* ZERO_CHECK */;
			targetProxy = C8E31E532D07480A8DF452B4 /* PBXContainerItemProxy */;
		};
		D7E5FAD26E1D4581A97FCE0F /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = E428435B102C48A38B746184 /* Cube */;
			targetProxy = 7AFE5905A4914EC4814709CC /* PBXContainerItemProxy */;
		};
		DC9298F4F4EF41FD83B2548B /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = BE4AE7D2D04745A2B7B33E5F /* TextureLoader */;
			targetProxy = D69738AE26704BA59DA7158C /* PBXContainerItemProxy */;
		};
		DD071D1334204B088528143D /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = BDE3C89AC5D8432EB0724818 /* glfw */;
			targetProxy = 5EBEA154AB4D45A9952FB47B /* PBXContainerItemProxy */;
		};
		DD73B592ECAE4A68BD840F4A /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D1BDF48FD8FD4353A35A71E4 /* ZERO_CHECK */;
			targetProxy = 7AD47C2DA72045B6BC9EC565 /* PBXContainerItemProxy */;
		};
		E05C5CFA84654478B1784C9D /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8A0B984A8AE24D61976E96D9 /* accuracy */;
			targetProxy = FC5DE02997C5444385FE777B /* PBXContainerItemProxy */;
		};
		E14E8B6FF441433BBF6506D9 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D1BDF48FD8FD4353A35A71E4 /* ZERO_CHECK */;
			targetProxy = 58C88750F30540B09BBC8CE8 /* PBXContainerItemProxy */;
		};
		E3FC29D6C31748469F0BBA5B /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D1BDF48FD8FD4353A35A71E4 /* ZERO_CHECK */;
			targetProxy = D8D98CA36A78459EA85BD3AF /* PBXContainerItemProxy */;
		};
		E46C074F7FFB4A87A22E176F /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D1BDF48FD8FD4353A35A71E4 /* ZERO_CHECK */;
			targetProxy = FF48E560C2814E9D96430C0E /* PBXContainerItemProxy */;
		};
		E4A5CB4DC7AE4E41A777E989 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = BDE3C89AC5D8432EB0724818 /* glfw */;
			targetProxy = 3E77B27EF0134F278D582AFB /* PBXContainerItemProxy */;
		};
		F3DD3CB084D94E2CB8717109 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 6776F94C10EA4DDCA85329A5 /* Keyboard */;
			targetProxy = AD3C2CA4E9244F33950ADA1C /* PBXContainerItemProxy */;
		};
		F70E28A7C32640138C5DDC31 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D1BDF48FD8FD4353A35A71E4 /* ZERO_CHECK */;
			targetProxy = 3300C0200C854A60A143D381 /* PBXContainerItemProxy */;
		};
		F8AF07C26918474883451CA3 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = BDE3C89AC5D8432EB0724818 /* glfw */;
			targetProxy = F45243622356412C97BCFB40 /* PBXContainerItemProxy */;
		};
		F8F208201534450EB7BE8D91 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = BDE3C89AC5D8432EB0724818 /* glfw */;
			targetProxy = 574ABEEC012245E0821F80C1 /* PBXContainerItemProxy */;
		};
		F9F499025ACF4E438C293238 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D1BDF48FD8FD4353A35A71E4 /* ZERO_CHECK */;
			targetProxy = 7CAD589562CE472E99CCF281 /* PBXContainerItemProxy */;
		};
		FAC1ACCA820A40D6ACDBCBCB /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = ABA061AFB00A40BDBADD9EEB /* GLFWApp */;
			targetProxy = B38BD0902A3A499AA0502012 /* PBXContainerItemProxy */;
		};
		FB1950E3B0BC4F0798BE78A2 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = BDE3C89AC5D8432EB0724818 /* glfw */;
			targetProxy = 4E0D1C3538F14FBCAD99DB7D /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin XCBuildConfiguration section */
		02204FDD2CF74175A924A89B /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", _GLFW_USE_CONFIG_H, );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src\"", );
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = "    -DNDEBUG   -Wall";
				OTHER_LIBTOOLFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = glfw3;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Release;
		};
		08836E04EFF74EC7B94537A6 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"", );
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "     -Wall";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\" -framework AGL -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = glfwinfo;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Debug;
		};
		090269F78BEB460888E93D5E /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Version;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Debug;
		};
		09C7FA362CD548019A9D626B /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     -DNDEBUG  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ImmediateTriangles;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Release;
		};
		0C92EE78C9A140329FF25CEF /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"", );
				INFOPLIST_FILE = "/Users/Sun/Repositories/MyProjects/Up\ and\ Running\ with\ OpenGL/xcode/glfw/tests/CMakeFiles/threads.dir/Info.plist";
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "     -Wall";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\" -framework AGL -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = threads;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Debug;
		};
		0CA029E6295C4BFE99702277 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = install;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = MinSizeRel;
		};
		0D0E1C9F9091433286E94376 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"", );
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "    -DNDEBUG   -Wall";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\" -framework AGL -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = joysticks;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = MinSizeRel;
		};
		0F7027DAB2C545DA8C6170EF /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     -DNDEBUG  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Version;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Release;
		};
		1058028643DB4DCB9EAA6867 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     -DNDEBUG  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ModelView;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Release;
		};
		152BCDC9572947EEA69BFE1A /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"", );
				INFOPLIST_FILE = "/Users/Sun/Repositories/MyProjects/Up\ and\ Running\ with\ OpenGL/xcode/glfw/tests/CMakeFiles/sharing.dir/Info.plist";
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "    -DNDEBUG   -Wall";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\" -framework AGL -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = sharing;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Release;
		};
		1553CC5C9D5E4BD28C24EA19 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = DynamicMesh;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Debug;
		};
		180D5657F55D4C7F8EDEF1C7 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"", );
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "       -DNDEBUG   -Wall";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\" -framework AGL -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = clipboard;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = RelWithDebInfo;
		};
		19460BC887504ACAB6EA0CA0 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"", );
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "    -DNDEBUG   -Wall";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\" -framework AGL -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = gamma;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Release;
		};
		195BD747047D42BDA4596889 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     -DNDEBUG  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = TriangleOrtho;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Release;
		};
		1A5D1E489A70467CA52FDFBC /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Model;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Debug;
		};
		1D2DB2DFBB93404EA5AC0880 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     -DNDEBUG  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Texture;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = MinSizeRel;
		};
		1E92EFE748D14A2E95612325 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     -DNDEBUG  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = LightingAndTexture;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Release;
		};
		1ED5E061D3B349DA9A06C4BE /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"", );
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "       -DNDEBUG   -Wall";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\" -framework AGL -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = gamma;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = RelWithDebInfo;
		};
		200B870D542E43FC92360E79 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     -DNDEBUG  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Lighting;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Release;
		};
		202AF09257E747609598531F /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"", );
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "    -DNDEBUG   -Wall";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\" -framework AGL -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = fsaa;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = MinSizeRel;
		};
		2033739983954366AF7B50C7 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     -DNDEBUG  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Cube;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = MinSizeRel;
		};
		215743DADA6C469F94D06287 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Cube;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Debug;
		};
		25794B0A61F045408D3F8F64 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     -DNDEBUG  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = TriangleBuffer;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Release;
		};
		272C15EFC6194F9FBCE17656 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk;
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/build";
			};
			name = Debug;
		};
		29113F00ABCC46B7B76A6375 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     -DNDEBUG  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Keyboard;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = MinSizeRel;
		};
		2AE449F958BE40BF899ABC50 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"", );
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "    -DNDEBUG   -Wall";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\" -framework AGL -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = joysticks;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Release;
		};
		2B5AE2B438874836886AB5FE /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"", );
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "    -DNDEBUG   -Wall";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\" -framework AGL -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = clipboard;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Release;
		};
		2B6A4B179337407892E67737 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"", );
				INFOPLIST_FILE = "/Users/Sun/Repositories/MyProjects/Up\ and\ Running\ with\ OpenGL/xcode/glfw/tests/CMakeFiles/tearing.dir/Info.plist";
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "    -DNDEBUG   -Wall";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\" -framework AGL -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = tearing;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = MinSizeRel;
		};
		2DE9EBF583EB456DB127C29C /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     -DNDEBUG  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Mouse;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Release;
		};
		2E36551DD6FB44A4A65CCB53 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = install;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Debug;
		};
		2F3C6BD1F6874CCD888EE10B /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"", );
				INFOPLIST_FILE = "/Users/Sun/Repositories/MyProjects/Up\ and\ Running\ with\ OpenGL/xcode/glfw/tests/CMakeFiles/accuracy.dir/Info.plist";
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "       -DNDEBUG   -Wall";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\" -framework AGL -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = accuracy;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = RelWithDebInfo;
		};
		306A2E1801D34EF19A31CC6E /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     -DNDEBUG  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Immediate;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Release;
		};
		32E9F3490F6A4616BFE6A8A0 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"", );
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "     -Wall";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\" -framework AGL -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = modes;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Debug;
		};
		33DD95610FC6481C9A808083 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"", );
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "    -DNDEBUG   -Wall";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\" -framework AGL -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = glfwinfo;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Release;
		};
		35C11139138347C399E2CC1A /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     -DNDEBUG  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Version;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = MinSizeRel;
		};
		375336936FD54FD2ACA750D1 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include        -DNDEBUG  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = TriangleOrtho;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = RelWithDebInfo;
		};
		37617C0D0E8D4D42AAEAAB93 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"", );
				INFOPLIST_FILE = "/Users/Sun/Repositories/MyProjects/Up\ and\ Running\ with\ OpenGL/xcode/glfw/tests/CMakeFiles/windows.dir/Info.plist";
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "    -DNDEBUG   -Wall";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\" -framework AGL -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = windows;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = MinSizeRel;
		};
		387F41139B2F42E2BA0FA03E /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"", );
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "       -DNDEBUG   -Wall";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\" -framework AGL -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = defaults;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = RelWithDebInfo;
		};
		38BBA5AE98E94CA49A451810 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"", );
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "       -DNDEBUG   -Wall";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\" -framework AGL -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = joysticks;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = RelWithDebInfo;
		};
		3A543DF984754972A4100A5D /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     -DNDEBUG  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Immediate;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = MinSizeRel;
		};
		3B6E96A81832465DBB11B3DC /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     -DNDEBUG  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Cube;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Release;
		};
		3EF36B41E46B46A4AE07A095 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"", );
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "    -DNDEBUG   -Wall";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\" -framework AGL -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = clipboard;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = MinSizeRel;
		};
		4181E953B1414CE4961F494A /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"", );
				INFOPLIST_FILE = "/Users/Sun/Repositories/MyProjects/Up\ and\ Running\ with\ OpenGL/xcode/glfw/tests/CMakeFiles/sharing.dir/Info.plist";
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "    -DNDEBUG   -Wall";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\" -framework AGL -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = sharing;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = MinSizeRel;
		};
		431D996A45C64825BFBF8D47 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"", );
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "    -DNDEBUG   -Wall";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\" -framework AGL -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = defaults;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = MinSizeRel;
		};
		43737E0FB1C64D7CB05990C4 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ZERO_CHECK;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = RelWithDebInfo;
		};
		45447805A2894B849A1F2B23 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include        -DNDEBUG  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Extensions;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = RelWithDebInfo;
		};
		456376AF287E42E9BD87F222 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"", );
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "     -Wall";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\" -framework AGL -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = joysticks;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Debug;
		};
		49107BD970D640F6B895C6F6 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"", );
				INFOPLIST_FILE = "/Users/Sun/Repositories/MyProjects/Up\ and\ Running\ with\ OpenGL/xcode/glfw/tests/CMakeFiles/threads.dir/Info.plist";
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "       -DNDEBUG   -Wall";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\" -framework AGL -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = threads;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = RelWithDebInfo;
		};
		4F17A0C200134F2C8005EE6C /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include        -DNDEBUG  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = GLFWwindow;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = RelWithDebInfo;
		};
		5093C6619216444CB0C9929C /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include        -DNDEBUG  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = TriangleBuffer;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = RelWithDebInfo;
		};
		5498FB4726144B2E87DC8582 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"", );
				INFOPLIST_FILE = "/Users/Sun/Repositories/MyProjects/Up\ and\ Running\ with\ OpenGL/xcode/glfw/tests/CMakeFiles/threads.dir/Info.plist";
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "    -DNDEBUG   -Wall";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\" -framework AGL -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = threads;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = MinSizeRel;
		};
		56247FC7795B491A94D0E3DA /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     -DNDEBUG  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Model;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Release;
		};
		56CE669EA5664DB8878AF652 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     -DNDEBUG  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Keyboard;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Release;
		};
		57E133A04E0E4FD0901EB8FD /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     -DNDEBUG  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ModelView;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = MinSizeRel;
		};
		5AC4CFA564774DECA4524FE5 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"", );
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "       -DNDEBUG   -Wall";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\" -framework AGL -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = iconify;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = RelWithDebInfo;
		};
		5B5B08B607114C0284E271FE /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ALL_BUILD;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = MinSizeRel;
		};
		5DE1797EDC974A5CA47ADB12 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = uninstall;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Debug;
		};
		601026AF0D0F4B49B4C83E4B /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     -DNDEBUG  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = TextureLoader;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Release;
		};
		6202F84BF2884C7CACD2D096 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include        -DNDEBUG  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = TextureLoader;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = RelWithDebInfo;
		};
		623F2779069D416C93DA32B5 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include        -DNDEBUG  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = TriangleColorBuffer;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = RelWithDebInfo;
		};
		62CA6A6A308B4E82A24E51CC /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"", );
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "       -DNDEBUG   -Wall";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\" -framework AGL -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = fsaa;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = RelWithDebInfo;
		};
		63A5F66D97504DA385DFEBE7 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include        -DNDEBUG  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Immediate;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = RelWithDebInfo;
		};
		64D98CD508404F68920F506C /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ZERO_CHECK;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = MinSizeRel;
		};
		670140A565354859B586517C /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     -DNDEBUG  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = GLFWwindow;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = MinSizeRel;
		};
		6B0CCFB5F9A64382B242A634 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include        -DNDEBUG  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Keyboard;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = RelWithDebInfo;
		};
		6B4FC4DCDE1E4DE986E10601 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include        -DNDEBUG  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Texture;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = RelWithDebInfo;
		};
		6B719F95DB184EB390D4CE9F /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"", );
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "     -Wall";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\" -framework AGL -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = peter;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Debug;
		};
		6C2CF5C294574E99933E23BD /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"", );
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "    -DNDEBUG   -Wall";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\" -framework AGL -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = peter;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Release;
		};
		6EA3DDEE79074BD294501AA8 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"", );
				INFOPLIST_FILE = "/Users/Sun/Repositories/MyProjects/Up\ and\ Running\ with\ OpenGL/xcode/glfw/tests/CMakeFiles/windows.dir/Info.plist";
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "     -Wall";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\" -framework AGL -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = windows;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Debug;
		};
		701F8F3840524D81B10F0321 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"", );
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "    -DNDEBUG   -Wall";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\" -framework AGL -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = events;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = MinSizeRel;
		};
		706006B18E734D6D9BC825A9 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"", );
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "    -DNDEBUG   -Wall";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\" -framework AGL -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = reopen;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Release;
		};
		706065AFFD064111A8C1544F /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     -DNDEBUG  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = TriangleColorBuffer;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Release;
		};
		7092984DC7D0468E9D4AEDF7 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"", );
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "       -DNDEBUG   -Wall";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\" -framework AGL -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = glfwinfo;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = RelWithDebInfo;
		};
		7227997F8E6849888BA01B4D /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"", );
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "    -DNDEBUG   -Wall";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\" -framework AGL -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = fsaa;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Release;
		};
		72D0EDD89D754C76ADD609BC /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Texture;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Debug;
		};
		732C36D9CFBA432C859722DF /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"", );
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "     -Wall";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\" -framework AGL -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = gamma;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Debug;
		};
		7448EA7CF3A24846807D6216 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"", );
				INFOPLIST_FILE = "/Users/Sun/Repositories/MyProjects/Up\ and\ Running\ with\ OpenGL/xcode/glfw/tests/CMakeFiles/tearing.dir/Info.plist";
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "     -Wall";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\" -framework AGL -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = tearing;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Debug;
		};
		7C61B9D7E68D45C7B5AC2BFF /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"", );
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "    -DNDEBUG   -Wall";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\" -framework AGL -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = peter;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = MinSizeRel;
		};
		7E161A531A8C49F19DD70129 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", _GLFW_USE_CONFIG_H, );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src\"", );
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = "    -DNDEBUG   -Wall";
				OTHER_LIBTOOLFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = glfw3;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = MinSizeRel;
		};
		7F35074F10A04F63A7B36C61 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"", );
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "       -DNDEBUG   -Wall";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\" -framework AGL -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = modes;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = RelWithDebInfo;
		};
		7F3B986BDA5B4B9899ED28B5 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ALL_BUILD;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = RelWithDebInfo;
		};
		80AB71A744F24F57B3186B90 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ZERO_CHECK;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Release;
		};
		828F8B218B4043348E48C423 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"", );
				INFOPLIST_FILE = "/Users/Sun/Repositories/MyProjects/Up\ and\ Running\ with\ OpenGL/xcode/glfw/tests/CMakeFiles/windows.dir/Info.plist";
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "       -DNDEBUG   -Wall";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\" -framework AGL -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = windows;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = RelWithDebInfo;
		};
		85EA778C3B2B4A829DBED15C /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"", );
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "    -DNDEBUG   -Wall";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\" -framework AGL -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = iconify;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = MinSizeRel;
		};
		887AD12902DF4385BF43CD3E /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include        -DNDEBUG  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ImmediateTriangles;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = RelWithDebInfo;
		};
		8A2A2297BD7546F395EA7CAF /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = uninstall;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = RelWithDebInfo;
		};
		8BE429E019D84629B1E1C73B /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"", );
				INFOPLIST_FILE = "/Users/Sun/Repositories/MyProjects/Up\ and\ Running\ with\ OpenGL/xcode/glfw/tests/CMakeFiles/sharing.dir/Info.plist";
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "       -DNDEBUG   -Wall";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\" -framework AGL -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = sharing;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = RelWithDebInfo;
		};
		8DB3AF3FC8C84948889FB7C2 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"", );
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "       -DNDEBUG   -Wall";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\" -framework AGL -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = reopen;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = RelWithDebInfo;
		};
		8EB5AAD0475C42B68811E914 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Extensions;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Debug;
		};
		8F20641379F54EF090C3962E /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ALL_BUILD;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Debug;
		};
		928E220B22594DB5B233BC0C /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = GLFWApp;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Debug;
		};
		95A120891C1A4187A79E8EE9 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = install;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = RelWithDebInfo;
		};
		98B692B60CD24827BBBA697A /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include        -DNDEBUG  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ModelView;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = RelWithDebInfo;
		};
		98D444ECA0F64972AF17D345 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     -DNDEBUG  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = TriangleBuffer;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = MinSizeRel;
		};
		98D44ECA2F9F453DAB5FD3A2 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Immediate;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Debug;
		};
		9AD11058BFD541929C566F59 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"", );
				INFOPLIST_FILE = "/Users/Sun/Repositories/MyProjects/Up\ and\ Running\ with\ OpenGL/xcode/glfw/tests/CMakeFiles/accuracy.dir/Info.plist";
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "    -DNDEBUG   -Wall";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\" -framework AGL -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = accuracy;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Release;
		};
		9C10B8EC8F1D463BB9D0CDDD /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     -DNDEBUG  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = DynamicMesh;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Release;
		};
		9C427AA2C47A4774B571B91E /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include        -DNDEBUG  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Lighting;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = RelWithDebInfo;
		};
		9C990DCFFF7243CEA4B90308 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include        -DNDEBUG  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Model;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = RelWithDebInfo;
		};
		9EDC8CA173FF4FE78FCDD474 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"", );
				INFOPLIST_FILE = "/Users/Sun/Repositories/MyProjects/Up\ and\ Running\ with\ OpenGL/xcode/glfw/tests/CMakeFiles/accuracy.dir/Info.plist";
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "    -DNDEBUG   -Wall";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\" -framework AGL -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = accuracy;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = MinSizeRel;
		};
		A1C59BCE6222414E91F17229 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     -DNDEBUG  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = GLFWApp;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = MinSizeRel;
		};
		A1E8D4F271E341FF8EEE500F /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"", );
				INFOPLIST_FILE = "/Users/Sun/Repositories/MyProjects/Up\ and\ Running\ with\ OpenGL/xcode/glfw/tests/CMakeFiles/title.dir/Info.plist";
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "     -Wall";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\" -framework AGL -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = title;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Debug;
		};
		A2510408B17A4872BC722511 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include        -DNDEBUG  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = DynamicMesh;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = RelWithDebInfo;
		};
		A35D8C8CA8154E308C9CB292 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"", );
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "     -Wall";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\" -framework AGL -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = iconify;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Debug;
		};
		A8CFF7CBEADA4E5C868219B5 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"", );
				INFOPLIST_FILE = "/Users/Sun/Repositories/MyProjects/Up\ and\ Running\ with\ OpenGL/xcode/glfw/tests/CMakeFiles/threads.dir/Info.plist";
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "    -DNDEBUG   -Wall";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\" -framework AGL -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = threads;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Release;
		};
		AD70F15D263841F5A38CC1E8 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"", );
				INFOPLIST_FILE = "/Users/Sun/Repositories/MyProjects/Up\ and\ Running\ with\ OpenGL/xcode/glfw/tests/CMakeFiles/windows.dir/Info.plist";
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "    -DNDEBUG   -Wall";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\" -framework AGL -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = windows;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Release;
		};
		AE1984ABA35B4AA8BF198FEB /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk;
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/build";
			};
			name = MinSizeRel;
		};
		AEA7D56CCF9A4D689AC44C0C /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"", );
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "     -Wall";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\" -framework AGL -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = reopen;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Debug;
		};
		AEAF11E613BE48B382B4BE88 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", _GLFW_USE_CONFIG_H, );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src\"", );
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = "     -Wall";
				OTHER_LIBTOOLFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = glfw3;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Debug;
		};
		AF87C811182B45D0BC35848A /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"", );
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "     -Wall";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\" -framework AGL -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = clipboard;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Debug;
		};
		B01CBF3C21B04A98B806DC93 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = LightingAndTexture;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Debug;
		};
		B105AED319F54027B08599D2 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = TextureLoader;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Debug;
		};
		B72DE387FD3245978207C052 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"", );
				INFOPLIST_FILE = "/Users/Sun/Repositories/MyProjects/Up\ and\ Running\ with\ OpenGL/xcode/glfw/tests/CMakeFiles/tearing.dir/Info.plist";
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "    -DNDEBUG   -Wall";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\" -framework AGL -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = tearing;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Release;
		};
		BA2086E5072E4C05AC4CE077 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     -DNDEBUG  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = GLFWwindow;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Release;
		};
		BAD7CF583B914F20A3387BF4 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     -DNDEBUG  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Extensions;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = MinSizeRel;
		};
		BD845F552E9149939A7BD9E4 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"", );
				INFOPLIST_FILE = "/Users/Sun/Repositories/MyProjects/Up\ and\ Running\ with\ OpenGL/xcode/glfw/tests/CMakeFiles/sharing.dir/Info.plist";
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "     -Wall";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\" -framework AGL -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = sharing;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Debug;
		};
		C2EEF4F456D840A381F69955 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     -DNDEBUG  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = TextureLoader;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = MinSizeRel;
		};
		C501572B906E432E9431EB84 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     -DNDEBUG  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Lighting;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = MinSizeRel;
		};
		C57A6C603EF04B4F8511E41E /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"", );
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "     -Wall";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\" -framework AGL -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = defaults;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Debug;
		};
		C5E7A03B530D46B38C246215 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"", );
				INFOPLIST_FILE = "/Users/Sun/Repositories/MyProjects/Up\ and\ Running\ with\ OpenGL/xcode/glfw/tests/CMakeFiles/tearing.dir/Info.plist";
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "       -DNDEBUG   -Wall";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\" -framework AGL -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = tearing;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = RelWithDebInfo;
		};
		C834101E8F454DC38DC1751F /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = TriangleBuffer;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Debug;
		};
		C8A54619F3114C97AE29CDCD /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ALL_BUILD;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Release;
		};
		CA100295521A459897EDE41A /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = uninstall;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Release;
		};
		CB8CBBEE7B6448CEB385013D /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     -DNDEBUG  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = LightingAndTexture;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = MinSizeRel;
		};
		CB9E22CA3D6C46FF8A753D8E /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"", );
				INFOPLIST_FILE = "/Users/Sun/Repositories/MyProjects/Up\ and\ Running\ with\ OpenGL/xcode/glfw/tests/CMakeFiles/accuracy.dir/Info.plist";
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "     -Wall";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\" -framework AGL -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = accuracy;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Debug;
		};
		CC522EC0E5C745A2AF43E201 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include        -DNDEBUG  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Mouse;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = RelWithDebInfo;
		};
		CD52C0016F1B448492B1E6EB /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"", );
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "     -Wall";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\" -framework AGL -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = events;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Debug;
		};
		CE29DABEB8A247FC82FC3940 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     -DNDEBUG  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = DynamicMesh;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = MinSizeRel;
		};
		D13BABC3ED9748E2A8F73271 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = uninstall;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = MinSizeRel;
		};
		D14D72ACA07E46AFBAE45CFA /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", _GLFW_USE_CONFIG_H, );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src\"", );
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = "       -DNDEBUG   -Wall";
				OTHER_LIBTOOLFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = glfw3;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = RelWithDebInfo;
		};
		D1A350FEF4954F50B924C13F /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk;
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/build";
			};
			name = RelWithDebInfo;
		};
		D71517897652491C8516AE26 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     -DNDEBUG  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ImmediateTriangles;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = MinSizeRel;
		};
		D79AD49CDAE643B2B87970FA /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     -DNDEBUG  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = GLFWApp;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Release;
		};
		D7CD37919A984A8596E0B80B /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     -DNDEBUG  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Extensions;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Release;
		};
		D7FB5C653AB845C69F3DF246 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Keyboard;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Debug;
		};
		D8DEFD85F9E84A0B8CB2637B /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     -DNDEBUG  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Texture;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Release;
		};
		D97E59E82E76444F91A7E5B3 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"", );
				INFOPLIST_FILE = "/Users/Sun/Repositories/MyProjects/Up\ and\ Running\ with\ OpenGL/xcode/glfw/tests/CMakeFiles/title.dir/Info.plist";
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "       -DNDEBUG   -Wall";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\" -framework AGL -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = title;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = RelWithDebInfo;
		};
		DABC9C408EC849BBA76DAE57 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include        -DNDEBUG  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Cube;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = RelWithDebInfo;
		};
		DAFD5D4C5C6741C8897EC8AF /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = TriangleColorBuffer;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Debug;
		};
		DB25CDF866ED40AEAC848A68 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     -DNDEBUG  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Model;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = MinSizeRel;
		};
		DB9BD1654B7E485C8C08FF4A /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"", );
				INFOPLIST_FILE = "/Users/Sun/Repositories/MyProjects/Up\ and\ Running\ with\ OpenGL/xcode/glfw/tests/CMakeFiles/title.dir/Info.plist";
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "    -DNDEBUG   -Wall";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\" -framework AGL -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = title;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Release;
		};
		DC37F7AA9E9D49BAB359FBDA /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"", );
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "       -DNDEBUG   -Wall";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\" -framework AGL -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = peter;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = RelWithDebInfo;
		};
		DCD1FE9D205C4EB48AAA94FD /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include        -DNDEBUG  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = GLFWApp;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = RelWithDebInfo;
		};
		DEA84E2060FF460AA9194FE7 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"", );
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "    -DNDEBUG   -Wall";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\" -framework AGL -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = glfwinfo;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = MinSizeRel;
		};
		E68F7C8A79D44662B530D742 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ImmediateTriangles;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Debug;
		};
		E6E81533BC1B4CC5A1900819 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"", );
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "    -DNDEBUG   -Wall";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\" -framework AGL -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = reopen;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = MinSizeRel;
		};
		E9FF23E599094AE9906F632F /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Mouse;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Debug;
		};
		EB248FE255D1430F8CCF6071 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include        -DNDEBUG  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Version;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = RelWithDebInfo;
		};
		EB78487FFA924350BB591F7E /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     -DNDEBUG  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Mouse;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = MinSizeRel;
		};
		EC85269C572D476A81C57EEF /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"", );
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "    -DNDEBUG   -Wall";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\" -framework AGL -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = modes;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = MinSizeRel;
		};
		ED0E87BF620940D7A89A262A /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = install;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Release;
		};
		ED1B6187411B46DB93B072D8 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Lighting;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Debug;
		};
		EE0A5506027F40C1A39AADC1 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"", );
				INFOPLIST_FILE = "/Users/Sun/Repositories/MyProjects/Up\ and\ Running\ with\ OpenGL/xcode/glfw/tests/CMakeFiles/title.dir/Info.plist";
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "    -DNDEBUG   -Wall";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\" -framework AGL -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = title;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = MinSizeRel;
		};
		EE73FC6A89DA403680B8B84E /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"", );
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "    -DNDEBUG   -Wall";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\" -framework AGL -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = events;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Release;
		};
		EEA9978458704D8291D9EE9E /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include        -DNDEBUG  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = LightingAndTexture;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = RelWithDebInfo;
		};
		EFA1F9FCC62149E7ACB6F174 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"", );
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "       -DNDEBUG   -Wall";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\" -framework AGL -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = events;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = RelWithDebInfo;
		};
		F17879AFCE1A4E6FAA0C02FC /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     -DNDEBUG  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = TriangleColorBuffer;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = MinSizeRel;
		};
		F35E891600284DBB81506B1E /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ZERO_CHECK;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Debug;
		};
		F57C44C2D9EC4B49AB806D51 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk;
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/build";
			};
			name = Release;
		};
		F58DE033363A4B2B82451B9C /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     -DNDEBUG  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = TriangleOrtho;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = MinSizeRel;
		};
		F96B15B5DEA34BC194672DE4 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = TriangleOrtho;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Debug;
		};
		F9B97E9691A440C5A18C81FE /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = GLFWwindow;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Debug;
		};
		FAC52F8348764732AD3BFD3D /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"", );
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "    -DNDEBUG   -Wall";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\" -framework AGL -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = iconify;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Release;
		};
		FC438DC3729A4718B925A253 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", );
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = " \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\" \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\" /usr/lib/libGLEW.dylib -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ModelView;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Debug;
		};
		FC6FA776C5174B04AED4AE33 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"", );
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "    -DNDEBUG   -Wall";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\" -framework AGL -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = modes;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Release;
		};
		FD90ECF6AF8C4F518F7F3D83 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"", );
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "    -DNDEBUG   -Wall";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\" -framework AGL -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = defaults;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Release;
		};
		FD91276F3F5F4399ADF96937 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"", );
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "    -DNDEBUG   -Wall";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\" -framework AGL -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = gamma;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = MinSizeRel;
		};
		FF734F2D47494AB7BCCEBF68 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = ("\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"", "\"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"", );
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "     -Wall";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  \"/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\" -framework AGL -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation -framework CoreVideo";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = fsaa;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/Sun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
			};
			name = Debug;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		03CA83B549AE47879DD0916A /* Build configuration list for PBXNativeTarget "TriangleBuffer" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				C834101E8F454DC38DC1751F /* Debug */,
				25794B0A61F045408D3F8F64 /* Release */,
				98D444ECA0F64972AF17D345 /* MinSizeRel */,
				5093C6619216444CB0C9929C /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		117A828C03E6480EB2E9AF28 /* Build configuration list for PBXNativeTarget "defaults" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				C57A6C603EF04B4F8511E41E /* Debug */,
				FD90ECF6AF8C4F518F7F3D83 /* Release */,
				431D996A45C64825BFBF8D47 /* MinSizeRel */,
				387F41139B2F42E2BA0FA03E /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		16AA517B224A48E199C6A74F /* Build configuration list for PBXNativeTarget "sharing" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				BD845F552E9149939A7BD9E4 /* Debug */,
				152BCDC9572947EEA69BFE1A /* Release */,
				4181E953B1414CE4961F494A /* MinSizeRel */,
				8BE429E019D84629B1E1C73B /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		19D659C2825B4C1BBFDDC775 /* Build configuration list for PBXNativeTarget "Model" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				1A5D1E489A70467CA52FDFBC /* Debug */,
				56247FC7795B491A94D0E3DA /* Release */,
				DB25CDF866ED40AEAC848A68 /* MinSizeRel */,
				9C990DCFFF7243CEA4B90308 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		1A11F6396E5C41AA98B07643 /* Build configuration list for PBXNativeTarget "TriangleOrtho" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				F96B15B5DEA34BC194672DE4 /* Debug */,
				195BD747047D42BDA4596889 /* Release */,
				F58DE033363A4B2B82451B9C /* MinSizeRel */,
				375336936FD54FD2ACA750D1 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		1BAA9FDE1D49493D85607CD3 /* Build configuration list for PBXNativeTarget "Cube" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				215743DADA6C469F94D06287 /* Debug */,
				3B6E96A81832465DBB11B3DC /* Release */,
				2033739983954366AF7B50C7 /* MinSizeRel */,
				DABC9C408EC849BBA76DAE57 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		1C276CFD5B254CB8833876B9 /* Build configuration list for PBXNativeTarget "Immediate" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				98D44ECA2F9F453DAB5FD3A2 /* Debug */,
				306A2E1801D34EF19A31CC6E /* Release */,
				3A543DF984754972A4100A5D /* MinSizeRel */,
				63A5F66D97504DA385DFEBE7 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		1DC4CC5312234DEC927B1ADB /* Build configuration list for PBXNativeTarget "tearing" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				7448EA7CF3A24846807D6216 /* Debug */,
				B72DE387FD3245978207C052 /* Release */,
				2B6A4B179337407892E67737 /* MinSizeRel */,
				C5E7A03B530D46B38C246215 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2017C85D67B24176BBCE3AA5 /* Build configuration list for PBXNativeTarget "TriangleColorBuffer" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				DAFD5D4C5C6741C8897EC8AF /* Debug */,
				706065AFFD064111A8C1544F /* Release */,
				F17879AFCE1A4E6FAA0C02FC /* MinSizeRel */,
				623F2779069D416C93DA32B5 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		21010335E7C64C968DFADB27 /* Build configuration list for PBXNativeTarget "ImmediateTriangles" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				E68F7C8A79D44662B530D742 /* Debug */,
				09C7FA362CD548019A9D626B /* Release */,
				D71517897652491C8516AE26 /* MinSizeRel */,
				887AD12902DF4385BF43CD3E /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		22AC119532C7470C8E3696FF /* Build configuration list for PBXAggregateTarget "uninstall" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				5DE1797EDC974A5CA47ADB12 /* Debug */,
				CA100295521A459897EDE41A /* Release */,
				D13BABC3ED9748E2A8F73271 /* MinSizeRel */,
				8A2A2297BD7546F395EA7CAF /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		25436F1952764ECB9BED0936 /* Build configuration list for PBXNativeTarget "title" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				A1E8D4F271E341FF8EEE500F /* Debug */,
				DB9BD1654B7E485C8C08FF4A /* Release */,
				EE0A5506027F40C1A39AADC1 /* MinSizeRel */,
				D97E59E82E76444F91A7E5B3 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		341B9BC788934CE2B9D88C29 /* Build configuration list for PBXNativeTarget "modes" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				32E9F3490F6A4616BFE6A8A0 /* Debug */,
				FC6FA776C5174B04AED4AE33 /* Release */,
				EC85269C572D476A81C57EEF /* MinSizeRel */,
				7F35074F10A04F63A7B36C61 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		3CC3C7EA302245368F11D31D /* Build configuration list for PBXNativeTarget "fsaa" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				FF734F2D47494AB7BCCEBF68 /* Debug */,
				7227997F8E6849888BA01B4D /* Release */,
				202AF09257E747609598531F /* MinSizeRel */,
				62CA6A6A308B4E82A24E51CC /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		45042A367C5740D9BC773A0C /* Build configuration list for PBXNativeTarget "GLFWApp" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				928E220B22594DB5B233BC0C /* Debug */,
				D79AD49CDAE643B2B87970FA /* Release */,
				A1C59BCE6222414E91F17229 /* MinSizeRel */,
				DCD1FE9D205C4EB48AAA94FD /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		500ED9E282624B37A742FADA /* Build configuration list for PBXNativeTarget "windows" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				6EA3DDEE79074BD294501AA8 /* Debug */,
				AD70F15D263841F5A38CC1E8 /* Release */,
				37617C0D0E8D4D42AAEAAB93 /* MinSizeRel */,
				828F8B218B4043348E48C423 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		5DF6069D9C974BF28AB323DC /* Build configuration list for PBXNativeTarget "iconify" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				A35D8C8CA8154E308C9CB292 /* Debug */,
				FAC52F8348764732AD3BFD3D /* Release */,
				85EA778C3B2B4A829DBED15C /* MinSizeRel */,
				5AC4CFA564774DECA4524FE5 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		5FA7F1E1C53D4345AAD93778 /* Build configuration list for PBXNativeTarget "Texture" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				72D0EDD89D754C76ADD609BC /* Debug */,
				D8DEFD85F9E84A0B8CB2637B /* Release */,
				1D2DB2DFBB93404EA5AC0880 /* MinSizeRel */,
				6B4FC4DCDE1E4DE986E10601 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		694EB8C776204670AFE9EF76 /* Build configuration list for PBXNativeTarget "reopen" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				AEA7D56CCF9A4D689AC44C0C /* Debug */,
				706006B18E734D6D9BC825A9 /* Release */,
				E6E81533BC1B4CC5A1900819 /* MinSizeRel */,
				8DB3AF3FC8C84948889FB7C2 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		6B87094913624CF6ADE92D6B /* Build configuration list for PBXProject "UaR_OpenGL" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				272C15EFC6194F9FBCE17656 /* Debug */,
				F57C44C2D9EC4B49AB806D51 /* Release */,
				AE1984ABA35B4AA8BF198FEB /* MinSizeRel */,
				D1A350FEF4954F50B924C13F /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		780A87A643824133962A1F98 /* Build configuration list for PBXAggregateTarget "install" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2E36551DD6FB44A4A65CCB53 /* Debug */,
				ED0E87BF620940D7A89A262A /* Release */,
				0CA029E6295C4BFE99702277 /* MinSizeRel */,
				95A120891C1A4187A79E8EE9 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		7FE6EF3DBE4D42FFB520696E /* Build configuration list for PBXNativeTarget "Extensions" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				8EB5AAD0475C42B68811E914 /* Debug */,
				D7CD37919A984A8596E0B80B /* Release */,
				BAD7CF583B914F20A3387BF4 /* MinSizeRel */,
				45447805A2894B849A1F2B23 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		A8E544DAA170427DA0934AD3 /* Build configuration list for PBXAggregateTarget "ZERO_CHECK" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				F35E891600284DBB81506B1E /* Debug */,
				80AB71A744F24F57B3186B90 /* Release */,
				64D98CD508404F68920F506C /* MinSizeRel */,
				43737E0FB1C64D7CB05990C4 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		AA30F59F431547C882D53086 /* Build configuration list for PBXNativeTarget "peter" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				6B719F95DB184EB390D4CE9F /* Debug */,
				6C2CF5C294574E99933E23BD /* Release */,
				7C61B9D7E68D45C7B5AC2BFF /* MinSizeRel */,
				DC37F7AA9E9D49BAB359FBDA /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		AADCC35CB12D43F2924B11FA /* Build configuration list for PBXNativeTarget "ModelView" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				FC438DC3729A4718B925A253 /* Debug */,
				1058028643DB4DCB9EAA6867 /* Release */,
				57E133A04E0E4FD0901EB8FD /* MinSizeRel */,
				98B692B60CD24827BBBA697A /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		AB1CE974D6C646FA84909C60 /* Build configuration list for PBXNativeTarget "clipboard" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				AF87C811182B45D0BC35848A /* Debug */,
				2B5AE2B438874836886AB5FE /* Release */,
				3EF36B41E46B46A4AE07A095 /* MinSizeRel */,
				180D5657F55D4C7F8EDEF1C7 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		AD38CAAD940841E595D154A0 /* Build configuration list for PBXNativeTarget "events" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				CD52C0016F1B448492B1E6EB /* Debug */,
				EE73FC6A89DA403680B8B84E /* Release */,
				701F8F3840524D81B10F0321 /* MinSizeRel */,
				EFA1F9FCC62149E7ACB6F174 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		B197FA539931413A82079BF5 /* Build configuration list for PBXNativeTarget "accuracy" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				CB9E22CA3D6C46FF8A753D8E /* Debug */,
				9AD11058BFD541929C566F59 /* Release */,
				9EDC8CA173FF4FE78FCDD474 /* MinSizeRel */,
				2F3C6BD1F6874CCD888EE10B /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		B3521E27421C45E6B0799225 /* Build configuration list for PBXNativeTarget "glfw" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				AEAF11E613BE48B382B4BE88 /* Debug */,
				02204FDD2CF74175A924A89B /* Release */,
				7E161A531A8C49F19DD70129 /* MinSizeRel */,
				D14D72ACA07E46AFBAE45CFA /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		B73695BCE1AB40BCB0C7EC5C /* Build configuration list for PBXNativeTarget "Mouse" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				E9FF23E599094AE9906F632F /* Debug */,
				2DE9EBF583EB456DB127C29C /* Release */,
				EB78487FFA924350BB591F7E /* MinSizeRel */,
				CC522EC0E5C745A2AF43E201 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		BDFB33A11BE84B9A8EA6646E /* Build configuration list for PBXNativeTarget "joysticks" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				456376AF287E42E9BD87F222 /* Debug */,
				2AE449F958BE40BF899ABC50 /* Release */,
				0D0E1C9F9091433286E94376 /* MinSizeRel */,
				38BBA5AE98E94CA49A451810 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		CC477BF82FA44F399B4102D3 /* Build configuration list for PBXNativeTarget "glfwinfo" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				08836E04EFF74EC7B94537A6 /* Debug */,
				33DD95610FC6481C9A808083 /* Release */,
				DEA84E2060FF460AA9194FE7 /* MinSizeRel */,
				7092984DC7D0468E9D4AEDF7 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		D482CAB5FA9748DD811F8119 /* Build configuration list for PBXNativeTarget "Version" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				090269F78BEB460888E93D5E /* Debug */,
				0F7027DAB2C545DA8C6170EF /* Release */,
				35C11139138347C399E2CC1A /* MinSizeRel */,
				EB248FE255D1430F8CCF6071 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		D4CD6FC9AA5142BF9C093F9A /* Build configuration list for PBXNativeTarget "Lighting" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				ED1B6187411B46DB93B072D8 /* Debug */,
				200B870D542E43FC92360E79 /* Release */,
				C501572B906E432E9431EB84 /* MinSizeRel */,
				9C427AA2C47A4774B571B91E /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		D779646E16DB4B308697D135 /* Build configuration list for PBXNativeTarget "DynamicMesh" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				1553CC5C9D5E4BD28C24EA19 /* Debug */,
				9C10B8EC8F1D463BB9D0CDDD /* Release */,
				CE29DABEB8A247FC82FC3940 /* MinSizeRel */,
				A2510408B17A4872BC722511 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		DA90626E5BF04A59AFD77BBA /* Build configuration list for PBXNativeTarget "Keyboard" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				D7FB5C653AB845C69F3DF246 /* Debug */,
				56CE669EA5664DB8878AF652 /* Release */,
				29113F00ABCC46B7B76A6375 /* MinSizeRel */,
				6B0CCFB5F9A64382B242A634 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		DA96176D1B6242159A07D3C9 /* Build configuration list for PBXNativeTarget "GLFWwindow" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				F9B97E9691A440C5A18C81FE /* Debug */,
				BA2086E5072E4C05AC4CE077 /* Release */,
				670140A565354859B586517C /* MinSizeRel */,
				4F17A0C200134F2C8005EE6C /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		DAB23BCFC59D4C2E92657B7D /* Build configuration list for PBXNativeTarget "LightingAndTexture" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				B01CBF3C21B04A98B806DC93 /* Debug */,
				1E92EFE748D14A2E95612325 /* Release */,
				CB8CBBEE7B6448CEB385013D /* MinSizeRel */,
				EEA9978458704D8291D9EE9E /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		DBC12BF4DE7E4D218A772889 /* Build configuration list for PBXNativeTarget "gamma" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				732C36D9CFBA432C859722DF /* Debug */,
				19460BC887504ACAB6EA0CA0 /* Release */,
				FD91276F3F5F4399ADF96937 /* MinSizeRel */,
				1ED5E061D3B349DA9A06C4BE /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		DCFC03096E654A359ADEA610 /* Build configuration list for PBXNativeTarget "TextureLoader" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				B105AED319F54027B08599D2 /* Debug */,
				601026AF0D0F4B49B4C83E4B /* Release */,
				C2EEF4F456D840A381F69955 /* MinSizeRel */,
				6202F84BF2884C7CACD2D096 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		EB3EF5D58A0948C2982DAB26 /* Build configuration list for PBXAggregateTarget "ALL_BUILD" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				8F20641379F54EF090C3962E /* Debug */,
				C8A54619F3114C97AE29CDCD /* Release */,
				5B5B08B607114C0284E271FE /* MinSizeRel */,
				7F3B986BDA5B4B9899ED28B5 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		EBD4E15A64734363916ADC3A /* Build configuration list for PBXNativeTarget "threads" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				0C92EE78C9A140329FF25CEF /* Debug */,
				A8CFF7CBEADA4E5C868219B5 /* Release */,
				5498FB4726144B2E87DC8582 /* MinSizeRel */,
				49107BD970D640F6B895C6F6 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
/* End XCConfigurationList section */
	};
	rootObject = F5E098188F82442E84BE60E5 /* Project object */;
}
